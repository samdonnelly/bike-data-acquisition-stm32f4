ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB153:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** // Libraries
  27:Core/Src/main.c **** #include <stdlib.h>
  28:Core/Src/main.c **** #include <stdio.h>
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** // Header files
  31:Core/Src/main.c **** // #include "i2c-lcd.h"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 2


  32:Core/Src/main.c **** // #include "accelerometer_data.h"
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** // State machine states
  45:Core/Src/main.c **** #define startup_state         0
  46:Core/Src/main.c **** #define normal_state          1
  47:Core/Src/main.c **** #define accel_cal_prep_state  2
  48:Core/Src/main.c **** #define accel_cal_state       3
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** // Accelerometer hardware registers
  51:Core/Src/main.c **** #define MPU6050_ADDR       0xD0      // MPU6050 ID
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** #define SMPLRT_DIV_REG     0x19      // Sample rate divider
  54:Core/Src/main.c **** #define GYRO_CONFIG_REG    0x1B      // Gyroscope configuration
  55:Core/Src/main.c **** #define ACCEL_CONFIG_REG   0x1C      // Accelerometer configuration
  56:Core/Src/main.c **** #define ACCEL_XOUT_H_REG   0x3B      // Accelerometer measurements
  57:Core/Src/main.c **** #define TEMP_OUT_H_REG     0x41      // Temperature measurement
  58:Core/Src/main.c **** #define GYRO_XOUT_H_REG    0x43      // Gyroscope measurements
  59:Core/Src/main.c **** #define PWR_MGMT_1_REG     0x6B      // Power management 1
  60:Core/Src/main.c **** #define WHO_AM_I_REG       0x75      // Who am I - verify device identity
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** // Constants
  63:Core/Src/main.c **** #define NUM_OPTIONS 2
  64:Core/Src/main.c **** #define NUM_STATES 4
  65:Core/Src/main.c **** #define S0_DELAY 3000
  66:Core/Src/main.c **** #define S1_DELAY 500
  67:Core/Src/main.c **** #define S2_DELAY 1000
  68:Core/Src/main.c **** #define S3_DELAY 2000
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** #define ACCEL_CONST 16384.0
  71:Core/Src/main.c **** #define GYRO_CONST  131.0
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** #define SLAVE_ADDRESS_LCD 0x4E // change this according to your setup
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END PD */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  78:Core/Src/main.c **** /* USER CODE BEGIN PM */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE END PM */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  83:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** UART_HandleTypeDef huart2;
  86:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_tx;
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE BEGIN PV */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* USER CODE END PV */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  93:Core/Src/main.c **** void SystemClock_Config(void);
  94:Core/Src/main.c **** static void MX_GPIO_Init(void);
  95:Core/Src/main.c **** static void MX_DMA_Init(void);
  96:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  97:Core/Src/main.c **** static void MX_I2C1_Init(void);
  98:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** // Function prototypes ----------------------------------------------------------------------------
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** // Accelerometer functions
 103:Core/Src/main.c **** void MPU6050_Init(void);
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** // State machine functions
 106:Core/Src/main.c **** void startup         (void);     // Initialize everything on startup
 107:Core/Src/main.c **** void normal          (void);     // Normal run mode
 108:Core/Src/main.c **** void accel_cal_prep  (void);     // Prepare to calibrate the accelerometer
 109:Core/Src/main.c **** void accel_cal       (void);     // Calibrate the accelerometer
 110:Core/Src/main.c **** //void data_choice     (void);     // Choose which data to log
 111:Core/Src/main.c **** //void standby         (void);     // Device ready to go, waiting on requested state from user
 112:Core/Src/main.c **** //void record_slow     (void);     // Records data at a slow rate - used when no significant activi
 113:Core/Src/main.c **** //void record_fast     (void);     // Records data at a fast rate - used when activity detected
 114:Core/Src/main.c **** //void mem_status      (void);     // Tells the amount of memory used/left
 115:Core/Src/main.c **** //void mem_full        (void);     // Memory is full on the SD
 116:Core/Src/main.c **** //void data_analyze    (void);     // Do suspension calculation in background with saved data
 117:Core/Src/main.c **** //void delay           (void);     // Delay
 118:Core/Src/main.c **** //void sd_eject        (void);     // Safely eject SD card - Only if controller is running - Is thi
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** // Read accelerometer raw data
 122:Core/Src/main.c **** float* MPU6050_read_accel_raw(float accel_con, uint8_t MPU_ADDR, uint8_t ACCEL_REG, float accel_cor
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** // Read accelerometer calibrated data
 125:Core/Src/main.c **** float* MPU6050_read_accel(float accel_con, uint8_t MPU_ADDR, uint8_t ACCEL_REG, float accel_data[],
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** // Read gyroscope raw data
 128:Core/Src/main.c **** float* MPU6050_read_gyro_raw(float gyro_con, uint8_t MPU_ADDR, uint8_t GYRO_REG, float gyro_corr[])
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** // Read gyroscope calibrated data
 131:Core/Src/main.c **** float* MPU6050_read_gyro(float gyro_con, uint8_t MPU_ADDR, uint8_t GYRO_REG, float gyro_data[], flo
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** void lcd_init (void);   // initialize lcd
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** void lcd_send_cmd (char cmd);  // send command to the lcd
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** void lcd_send_data (char data);  // send data to the lcd
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** void lcd_send_string (char *str);  // send string to the lcd
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** void lcd_clear (void);  
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 4


 146:Core/Src/main.c **** /* USER CODE END PFP */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 149:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** // Structures -------------------------------------------------------------------------------------
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** // Primary state machine structure
 155:Core/Src/main.c **** typedef const struct BSDA {
 156:Core/Src/main.c **** 	void (*output_func)(void);
 157:Core/Src/main.c **** 	unsigned long time_delay;
 158:Core/Src/main.c **** 	unsigned long next_state[NUM_OPTIONS];
 159:Core/Src/main.c **** } BSDA;
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** // State Machines
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** // Primary state machine
 165:Core/Src/main.c **** BSDA FSM[NUM_STATES] = {
 166:Core/Src/main.c **** 		{&startup,        S0_DELAY, {normal_state,         normal_state         }},
 167:Core/Src/main.c **** 		{&normal,         S1_DELAY, {normal_state,         accel_cal_prep_state }},
 168:Core/Src/main.c **** 		{&accel_cal_prep, S2_DELAY, {accel_cal_prep_state, accel_cal_state      }},
 169:Core/Src/main.c **** 		{&accel_cal,      S3_DELAY, {normal_state,         normal_state         }}
 170:Core/Src/main.c **** };
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** // Global variables -------------------------------------------------------------------------------
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** uint8_t flag = 0;     // Interrupt flag
 176:Core/Src/main.c **** unsigned long state;  // Current state
 177:Core/Src/main.c **** unsigned long input;  // For various inputs
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** float accel_data[3];
 180:Core/Src/main.c **** float *accel_data_p;
 181:Core/Src/main.c **** float accel_corr[3];
 182:Core/Src/main.c **** float *accel_corr_p;
 183:Core/Src/main.c **** float gyro_data[3];
 184:Core/Src/main.c **** float *gyro_data_p;
 185:Core/Src/main.c **** float gyro_corr[3];
 186:Core/Src/main.c **** float *gyro_corr_p;
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** char buf[5];      // Accelerometer data buffer
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** // Functions --------------------------------------------------------------------------------------
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** // Accelerometer initialization
 194:Core/Src/main.c **** void MPU6050_Init(void) {
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** 	uint8_t check;
 197:Core/Src/main.c **** 	uint8_t Data;
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** 	// check ID WHO_AM_I
 200:Core/Src/main.c **** 	HAL_I2C_Mem_Read(&hi2c1, MPU6050_ADDR, WHO_AM_I_REG, 1, &check, 1, 1000);
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** 	// If the device is present
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 5


 203:Core/Src/main.c **** 	if (check == 104) {  // 104 -> 0x68
 204:Core/Src/main.c **** 		// Power management register 0x6B we should write all 0's to wake the sensor up
 205:Core/Src/main.c **** 		Data = 0;
 206:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, PWR_MGMT_1_REG, 1, &Data, 1, 1000);
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** 		// Set DATA RATE of 1kHz by writing SMPLRT_DIV register
 209:Core/Src/main.c **** 		Data = 0x07;
 210:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, SMPLRT_DIV_REG, 1, &Data, 1, 1000);
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** 		// Set accelerometer configuration in ACCEL_CONFIG register
 213:Core/Src/main.c **** 		// XA_ST = 0, YA_ST = 0, ZA_ST = 0, FS_SEL = 0 -> +/- 2g
 214:Core/Src/main.c **** 		Data = 0x00;
 215:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, ACCEL_CONFIG_REG, 1, &Data, 1, 1000);
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** 		// Set gyroscope configuration in GYRO_CONFIG register
 218:Core/Src/main.c **** 		// XG_ST = 0, YG_ST = 0, ZG_ST = 0, FS_SEL = 0 -> +/- 250 deg/s
 219:Core/Src/main.c **** 		Data = 0x00;
 220:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, GYRO_CONFIG_REG, 1, &Data, 1, 1000);
 221:Core/Src/main.c **** 	}
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** 	else {
 224:Core/Src/main.c **** 		lcd_send_string("Sensor Not Resp");
 225:Core/Src/main.c **** 		HAL_Delay(5000);
 226:Core/Src/main.c **** 	}
 227:Core/Src/main.c **** }
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** void startup(void) {
 231:Core/Src/main.c **** 	// Initialize everything on startup
 232:Core/Src/main.c **** 	lcd_init();
 233:Core/Src/main.c **** 	MPU6050_Init();
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** 	accel_corr_p = MPU6050_read_accel_raw(ACCEL_CONST, MPU6050_ADDR, ACCEL_XOUT_H_REG, accel_corr);
 236:Core/Src/main.c **** 	gyro_corr_p  = MPU6050_read_gyro_raw(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_corr);
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** 	accel_corr[0] = accel_corr_p[0];
 239:Core/Src/main.c **** 	accel_corr[1] = accel_corr_p[1];
 240:Core/Src/main.c **** 	accel_corr[2] = accel_corr_p[2];
 241:Core/Src/main.c **** 	gyro_corr[0]  = gyro_corr_p[0];
 242:Core/Src/main.c **** 	gyro_corr[1]  = gyro_corr_p[1];
 243:Core/Src/main.c **** 	gyro_corr[2]  = gyro_corr_p[2];
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** 	lcd_send_string("Initialized");
 246:Core/Src/main.c **** }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** void normal(void) {
 249:Core/Src/main.c **** 	// Normal run mode
 250:Core/Src/main.c **** 	uint8_t line_pos;
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** 	accel_data_p = MPU6050_read_accel(ACCEL_CONST, MPU6050_ADDR, ACCEL_XOUT_H_REG, accel_data, accel_c
 253:Core/Src/main.c **** 	gyro_data_p  = MPU6050_read_gyro(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_data, gyro_corr);
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** 	accel_data[0] = accel_data_p[0];
 256:Core/Src/main.c **** 	accel_data[1] = accel_data_p[1];
 257:Core/Src/main.c **** 	accel_data[2] = accel_data_p[2];
 258:Core/Src/main.c **** 	gyro_data[0]  = gyro_data_p[0];
 259:Core/Src/main.c **** 	gyro_data[1]  = gyro_data_p[1];
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 6


 260:Core/Src/main.c **** 	gyro_data[2]  = gyro_data_p[2];
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** 	// Print on the screen
 263:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x00);
 264:Core/Src/main.c **** 	lcd_send_string("Ax=       ");
 265:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)accel_data[0]);
 266:Core/Src/main.c **** 	line_pos = (accel_data[0] >= 0) ? (0x04):(0x03);
 267:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 268:Core/Src/main.c **** 	lcd_send_string(buf);
 269:Core/Src/main.c **** 	lcd_send_string("g ");
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x40);
 272:Core/Src/main.c **** 	lcd_send_string("Ay=       ");
 273:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)accel_data[1]);
 274:Core/Src/main.c **** 	line_pos = (accel_data[1] >= 0) ? (0x44):(0x43);
 275:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 276:Core/Src/main.c **** 	lcd_send_string(buf);
 277:Core/Src/main.c **** 	lcd_send_string("g ");
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x14);
 280:Core/Src/main.c **** 	lcd_send_string("Az=       ");
 281:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)accel_data[2]);
 282:Core/Src/main.c **** 	line_pos = (accel_data[2] >= 0) ? (0x18):(0x17);
 283:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 284:Core/Src/main.c **** 	lcd_send_string(buf);
 285:Core/Src/main.c **** 	lcd_send_string("g ");
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x0A);
 288:Core/Src/main.c **** 	lcd_send_string("Gx=       ");
 289:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)gyro_data[0]);
 290:Core/Src/main.c **** 	line_pos = (gyro_data[0] >= 0) ? (0x0E):(0x0D);
 291:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 292:Core/Src/main.c **** 	lcd_send_string(buf);
 293:Core/Src/main.c **** 
 294:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x4A);
 295:Core/Src/main.c **** 	lcd_send_string("Gy=       ");
 296:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)gyro_data[1]);
 297:Core/Src/main.c **** 	line_pos = (gyro_data[1] >= 0) ? (0x4E):(0x4D);
 298:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 299:Core/Src/main.c **** 	lcd_send_string(buf);
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x1E);
 302:Core/Src/main.c **** 	lcd_send_string("Gz=       ");
 303:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)gyro_data[2]);
 304:Core/Src/main.c **** 	line_pos = (gyro_data[2] >= 0) ? (0x22):(0x21);
 305:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 306:Core/Src/main.c **** 	lcd_send_string(buf);
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x54);
 309:Core/Src/main.c **** 	lcd_send_string("                    ");
 310:Core/Src/main.c **** }
 311:Core/Src/main.c **** 
 312:Core/Src/main.c **** void accel_cal_prep(void) {
 313:Core/Src/main.c **** 	// Prepare to calibrate the accelerometer
 314:Core/Src/main.c **** 	flag = 0;
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** 	lcd_clear();
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x00);
 319:Core/Src/main.c **** 	lcd_send_string("Position the");
 320:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x40);
 321:Core/Src/main.c **** 	lcd_send_string("accelerometer to its");
 322:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x14);
 323:Core/Src/main.c **** 	lcd_send_string("zero position");
 324:Core/Src/main.c **** }
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** void accel_cal(void) {
 327:Core/Src/main.c **** 	// Calibrate the accelerometer
 328:Core/Src/main.c **** 	flag = 0;
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** 	lcd_clear();
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** 	accel_corr_p = MPU6050_read_accel_raw(ACCEL_CONST, MPU6050_ADDR, ACCEL_XOUT_H_REG, accel_corr);
 333:Core/Src/main.c **** 	gyro_corr_p  = MPU6050_read_gyro_raw(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_corr);
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** 	accel_corr[0] = accel_corr_p[0];
 336:Core/Src/main.c **** 	accel_corr[1] = accel_corr_p[1];
 337:Core/Src/main.c **** 	accel_corr[2] = accel_corr_p[2];
 338:Core/Src/main.c **** 	gyro_corr[0]  = gyro_corr_p[0];
 339:Core/Src/main.c **** 	gyro_corr[1]  = gyro_corr_p[1];
 340:Core/Src/main.c **** 	gyro_corr[2]  = gyro_corr_p[2];
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x00);
 343:Core/Src/main.c **** 	lcd_send_string("Calibration Complete");
 344:Core/Src/main.c **** }
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** void lcd_send_cmd (char cmd)
 347:Core/Src/main.c **** {
 348:Core/Src/main.c ****   char data_u, data_l;
 349:Core/Src/main.c **** 	uint8_t data_t[4];
 350:Core/Src/main.c **** 	data_u = (cmd&0xf0);
 351:Core/Src/main.c **** 	data_l = ((cmd<<4)&0xf0);
 352:Core/Src/main.c **** 	data_t[0] = data_u|0x0C;  //en=1, rs=0
 353:Core/Src/main.c **** 	data_t[1] = data_u|0x08;  //en=0, rs=0
 354:Core/Src/main.c **** 	data_t[2] = data_l|0x0C;  //en=1, rs=0
 355:Core/Src/main.c **** 	data_t[3] = data_l|0x08;  //en=0, rs=0
 356:Core/Src/main.c **** 	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 357:Core/Src/main.c **** }
 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** void lcd_send_data (char data)
 360:Core/Src/main.c **** {
 361:Core/Src/main.c **** 	char data_u, data_l;
 362:Core/Src/main.c **** 	uint8_t data_t[4];
 363:Core/Src/main.c **** 	data_u = (data&0xf0);
 364:Core/Src/main.c **** 	data_l = ((data<<4)&0xf0);
 365:Core/Src/main.c **** 	data_t[0] = data_u|0x0D;  //en=1, rs=1
 366:Core/Src/main.c **** 	data_t[1] = data_u|0x09;  //en=0, rs=1
 367:Core/Src/main.c **** 	data_t[2] = data_l|0x0D;  //en=1, rs=1
 368:Core/Src/main.c **** 	data_t[3] = data_l|0x09;  //en=0, rs=1
 369:Core/Src/main.c **** 	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 370:Core/Src/main.c **** }
 371:Core/Src/main.c **** 
 372:Core/Src/main.c **** void lcd_clear (void)
 373:Core/Src/main.c **** {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 8


 374:Core/Src/main.c **** 	lcd_send_cmd (0x00);
 375:Core/Src/main.c **** 	for (int i=0; i<100; i++)
 376:Core/Src/main.c **** 	{
 377:Core/Src/main.c **** 		lcd_send_data (' ');
 378:Core/Src/main.c **** 	}
 379:Core/Src/main.c **** }
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** void lcd_init (void)
 382:Core/Src/main.c **** {
 383:Core/Src/main.c **** 	// 4 bit initialisation
 384:Core/Src/main.c **** 	HAL_Delay(50);  // wait for >40ms
 385:Core/Src/main.c **** 	lcd_send_cmd (0x30);
 386:Core/Src/main.c **** 	HAL_Delay(5);  // wait for >4.1ms
 387:Core/Src/main.c **** 	lcd_send_cmd (0x30);
 388:Core/Src/main.c **** 	HAL_Delay(1);  // wait for >100us
 389:Core/Src/main.c **** 	lcd_send_cmd (0x30);
 390:Core/Src/main.c **** 	HAL_Delay(10);
 391:Core/Src/main.c **** 	lcd_send_cmd (0x20);  // 4bit mode
 392:Core/Src/main.c **** 	HAL_Delay(10);
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   // display initialization
 395:Core/Src/main.c **** 	lcd_send_cmd (0x28); // Function set --> DL=0 (4 bit mode), N = 1 (2 line display) F = 0 (5x8 char
 396:Core/Src/main.c **** 	HAL_Delay(1);
 397:Core/Src/main.c **** 	lcd_send_cmd (0x08); //Display on/off control --> D=0,C=0, B=0  ---> display off
 398:Core/Src/main.c **** 	HAL_Delay(1);
 399:Core/Src/main.c **** 	lcd_send_cmd (0x01);  // clear display
 400:Core/Src/main.c **** 	HAL_Delay(1);
 401:Core/Src/main.c **** 	lcd_send_cmd (0x06); //Entry mode set --> I/D = 1 (increment cursor) & S = 0 (no shift)
 402:Core/Src/main.c **** 	HAL_Delay(1);
 403:Core/Src/main.c **** 	lcd_send_cmd (0x0C); //Display on/off control --> D = 1, C and B = 0. (Cursor and blink, last two 
 404:Core/Src/main.c **** }
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** void lcd_send_string (char *str)
 407:Core/Src/main.c **** {
 408:Core/Src/main.c **** 	while (*str) lcd_send_data (*str++);
 409:Core/Src/main.c **** }
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** float* MPU6050_read_accel_raw(float accel_con, uint8_t MPU_ADDR, uint8_t ACCEL_REG, float accel_cor
 412:Core/Src/main.c **** 	uint8_t data[6];
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** 	// Read 6 bytes of data starting from ACCEL_XOUT_H register
 415:Core/Src/main.c **** 	HAL_I2C_Mem_Read(&hi2c1, MPU_ADDR, ACCEL_REG, 1, data, 6, 1000);
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** 	accel_corr[0] = ((int16_t)(data[0] << 8 | data[1]))/accel_con;
 418:Core/Src/main.c **** 	accel_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con;
 419:Core/Src/main.c **** 	accel_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con;
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** 	return accel_corr;
 422:Core/Src/main.c **** }
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** float* MPU6050_read_accel(float accel_con, uint8_t MPU_ADDR, uint8_t ACCEL_REG, float accel_data[],
 425:Core/Src/main.c **** 	uint8_t data[6];
 426:Core/Src/main.c **** 
 427:Core/Src/main.c **** 	// Read 6 bytes of data starting from ACCEL_XOUT_H register
 428:Core/Src/main.c **** 	HAL_I2C_Mem_Read(&hi2c1, MPU_ADDR, ACCEL_REG, 1, data, 6, 1000);
 429:Core/Src/main.c **** 
 430:Core/Src/main.c **** 	accel_data[0] = ((int16_t)(data[0] << 8 | data[1]))/accel_con - accel_corr[0];
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 9


 431:Core/Src/main.c **** 	accel_data[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con - accel_corr[1];
 432:Core/Src/main.c **** 	accel_data[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con - accel_corr[2];
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** 	return accel_data;
 435:Core/Src/main.c **** }
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** float* MPU6050_read_gyro_raw(float gyro_con, uint8_t MPU_ADDR, uint8_t GYRO_REG, float gyro_corr[])
 438:Core/Src/main.c **** 	uint8_t data[6];
 439:Core/Src/main.c **** 
 440:Core/Src/main.c **** 	// Read 6 bytes of data starting from ACCEL_XOUT_H register
 441:Core/Src/main.c **** 	HAL_I2C_Mem_Read(&hi2c1, MPU_ADDR, GYRO_REG, 1, data, 6, 1000);
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** 	gyro_corr[0] = ((int16_t)(data[0] << 8 | data[1]))/gyro_con;
 444:Core/Src/main.c **** 	gyro_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con;
 445:Core/Src/main.c **** 	gyro_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con;
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** 	return gyro_corr;
 448:Core/Src/main.c **** }
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** float* MPU6050_read_gyro(float gyro_con, uint8_t MPU_ADDR, uint8_t GYRO_REG, float gyro_data[], flo
 451:Core/Src/main.c **** 	uint8_t data[6];
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** 	// Read 6 bytes of data starting from ACCEL_XOUT_H register
 454:Core/Src/main.c **** 	HAL_I2C_Mem_Read(&hi2c1, MPU_ADDR, GYRO_REG, 1, data, 6, 1000);
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** 	gyro_data[0] = ((int16_t)(data[0] << 8 | data[1]))/gyro_con - gyro_corr[0];
 457:Core/Src/main.c **** 	gyro_data[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con - gyro_corr[1];
 458:Core/Src/main.c **** 	gyro_data[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con - gyro_corr[2];
 459:Core/Src/main.c **** 
 460:Core/Src/main.c **** 	return gyro_data;
 461:Core/Src/main.c **** }
 462:Core/Src/main.c **** 
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** // Interrupt
 465:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 466:Core/Src/main.c **** 	flag = 1;
 467:Core/Src/main.c **** }
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** /* USER CODE END 0 */
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** /**
 473:Core/Src/main.c ****   * @brief  The application entry point.
 474:Core/Src/main.c ****   * @retval int
 475:Core/Src/main.c ****   */
 476:Core/Src/main.c **** int main(void)
 477:Core/Src/main.c **** {
 478:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 479:Core/Src/main.c **** 
 480:Core/Src/main.c **** 	state = startup_state;   // Initialize to state 0
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /* USER CODE END 1 */
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 487:Core/Src/main.c ****   HAL_Init();
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   // lcd_init();
 492:Core/Src/main.c ****   // MPU6050_Init();
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   /* USER CODE END Init */
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /* Configure the system clock */
 497:Core/Src/main.c ****   SystemClock_Config();
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****   /* USER CODE END SysInit */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   /* Initialize all configured peripherals */
 504:Core/Src/main.c ****   MX_GPIO_Init();
 505:Core/Src/main.c ****   MX_DMA_Init();
 506:Core/Src/main.c ****   MX_USART2_UART_Init();
 507:Core/Src/main.c ****   MX_I2C1_Init();
 508:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   // HAL_UART_Transmit_DMA(&huart2, (uint8_t*)msg, sizeof(msg)/sizeof(msg[0]));
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /* USER CODE END 2 */
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* Infinite loop */
 515:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 516:Core/Src/main.c ****   while (1)
 517:Core/Src/main.c ****   {
 518:Core/Src/main.c ****     /* USER CODE END WHILE */
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 521:Core/Src/main.c **** 
 522:Core/Src/main.c **** 	  (FSM[state].output_func)();
 523:Core/Src/main.c **** 	  HAL_Delay(FSM[state].time_delay);
 524:Core/Src/main.c **** 	  state = FSM[state].next_state[flag];
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****   }
 527:Core/Src/main.c ****   /* USER CODE END 3 */
 528:Core/Src/main.c **** }
 529:Core/Src/main.c **** 
 530:Core/Src/main.c **** /**
 531:Core/Src/main.c ****   * @brief System Clock Configuration
 532:Core/Src/main.c ****   * @retval None
 533:Core/Src/main.c ****   */
 534:Core/Src/main.c **** void SystemClock_Config(void)
 535:Core/Src/main.c **** {
 536:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 537:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 538:Core/Src/main.c **** 
 539:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 540:Core/Src/main.c ****   */
 541:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 542:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 543:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 544:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 11


 545:Core/Src/main.c ****   */
 546:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 547:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 548:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 549:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 550:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 551:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 552:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 553:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 554:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 555:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 556:Core/Src/main.c ****   {
 557:Core/Src/main.c ****     Error_Handler();
 558:Core/Src/main.c ****   }
 559:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 560:Core/Src/main.c ****   */
 561:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 562:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 563:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 564:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 565:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 566:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 567:Core/Src/main.c **** 
 568:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 569:Core/Src/main.c ****   {
 570:Core/Src/main.c ****     Error_Handler();
 571:Core/Src/main.c ****   }
 572:Core/Src/main.c **** }
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** /**
 575:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 576:Core/Src/main.c ****   * @param None
 577:Core/Src/main.c ****   * @retval None
 578:Core/Src/main.c ****   */
 579:Core/Src/main.c **** static void MX_I2C1_Init(void)
 580:Core/Src/main.c **** {
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 589:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 590:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 591:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 592:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 593:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 594:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 595:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 596:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 597:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 598:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 599:Core/Src/main.c ****   {
 600:Core/Src/main.c ****     Error_Handler();
 601:Core/Src/main.c ****   }
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 12


 602:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 603:Core/Src/main.c **** 
 604:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 605:Core/Src/main.c **** 
 606:Core/Src/main.c **** }
 607:Core/Src/main.c **** 
 608:Core/Src/main.c **** /**
 609:Core/Src/main.c ****   * @brief USART2 Initialization Function
 610:Core/Src/main.c ****   * @param None
 611:Core/Src/main.c ****   * @retval None
 612:Core/Src/main.c ****   */
 613:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 614:Core/Src/main.c **** {
 615:Core/Src/main.c **** 
 616:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 621:Core/Src/main.c **** 
 622:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 623:Core/Src/main.c ****   huart2.Instance = USART2;
 624:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 625:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 626:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 627:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 628:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 629:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 630:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 631:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 632:Core/Src/main.c ****   {
 633:Core/Src/main.c ****     Error_Handler();
 634:Core/Src/main.c ****   }
 635:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 636:Core/Src/main.c **** 
 637:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 638:Core/Src/main.c **** 
 639:Core/Src/main.c **** }
 640:Core/Src/main.c **** 
 641:Core/Src/main.c **** /**
 642:Core/Src/main.c ****   * Enable DMA controller clock
 643:Core/Src/main.c ****   */
 644:Core/Src/main.c **** static void MX_DMA_Init(void)
 645:Core/Src/main.c **** {
 646:Core/Src/main.c **** 
 647:Core/Src/main.c ****   /* DMA controller clock enable */
 648:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 649:Core/Src/main.c **** 
 650:Core/Src/main.c ****   /* DMA interrupt init */
 651:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 652:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 653:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 654:Core/Src/main.c **** 
 655:Core/Src/main.c **** }
 656:Core/Src/main.c **** 
 657:Core/Src/main.c **** /**
 658:Core/Src/main.c ****   * @brief GPIO Initialization Function
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 13


 659:Core/Src/main.c ****   * @param None
 660:Core/Src/main.c ****   * @retval None
 661:Core/Src/main.c ****   */
 662:Core/Src/main.c **** static void MX_GPIO_Init(void)
 663:Core/Src/main.c **** {
  28              		.loc 1 663 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 8AB0     		sub	sp, sp, #40
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 664:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 664 3 view .LVU1
  43              		.loc 1 664 20 is_stmt 0 view .LVU2
  44 0004 0024     		movs	r4, #0
  45 0006 0594     		str	r4, [sp, #20]
  46 0008 0694     		str	r4, [sp, #24]
  47 000a 0794     		str	r4, [sp, #28]
  48 000c 0894     		str	r4, [sp, #32]
  49 000e 0994     		str	r4, [sp, #36]
 665:Core/Src/main.c **** 
 666:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 667:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 667 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 667 3 view .LVU4
  53 0010 0194     		str	r4, [sp, #4]
  54              		.loc 1 667 3 view .LVU5
  55 0012 2C4B     		ldr	r3, .L3
  56 0014 1A6B     		ldr	r2, [r3, #48]
  57 0016 42F00402 		orr	r2, r2, #4
  58 001a 1A63     		str	r2, [r3, #48]
  59              		.loc 1 667 3 view .LVU6
  60 001c 1A6B     		ldr	r2, [r3, #48]
  61 001e 02F00402 		and	r2, r2, #4
  62 0022 0192     		str	r2, [sp, #4]
  63              		.loc 1 667 3 view .LVU7
  64 0024 019A     		ldr	r2, [sp, #4]
  65              	.LBE4:
  66              		.loc 1 667 3 view .LVU8
 668:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  67              		.loc 1 668 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 668 3 view .LVU10
  70 0026 0294     		str	r4, [sp, #8]
  71              		.loc 1 668 3 view .LVU11
  72 0028 1A6B     		ldr	r2, [r3, #48]
  73 002a 42F08002 		orr	r2, r2, #128
  74 002e 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 14


  75              		.loc 1 668 3 view .LVU12
  76 0030 1A6B     		ldr	r2, [r3, #48]
  77 0032 02F08002 		and	r2, r2, #128
  78 0036 0292     		str	r2, [sp, #8]
  79              		.loc 1 668 3 view .LVU13
  80 0038 029A     		ldr	r2, [sp, #8]
  81              	.LBE5:
  82              		.loc 1 668 3 view .LVU14
 669:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  83              		.loc 1 669 3 view .LVU15
  84              	.LBB6:
  85              		.loc 1 669 3 view .LVU16
  86 003a 0394     		str	r4, [sp, #12]
  87              		.loc 1 669 3 view .LVU17
  88 003c 1A6B     		ldr	r2, [r3, #48]
  89 003e 42F00102 		orr	r2, r2, #1
  90 0042 1A63     		str	r2, [r3, #48]
  91              		.loc 1 669 3 view .LVU18
  92 0044 1A6B     		ldr	r2, [r3, #48]
  93 0046 02F00102 		and	r2, r2, #1
  94 004a 0392     		str	r2, [sp, #12]
  95              		.loc 1 669 3 view .LVU19
  96 004c 039A     		ldr	r2, [sp, #12]
  97              	.LBE6:
  98              		.loc 1 669 3 view .LVU20
 670:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 670 3 view .LVU21
 100              	.LBB7:
 101              		.loc 1 670 3 view .LVU22
 102 004e 0494     		str	r4, [sp, #16]
 103              		.loc 1 670 3 view .LVU23
 104 0050 1A6B     		ldr	r2, [r3, #48]
 105 0052 42F00202 		orr	r2, r2, #2
 106 0056 1A63     		str	r2, [r3, #48]
 107              		.loc 1 670 3 view .LVU24
 108 0058 1B6B     		ldr	r3, [r3, #48]
 109 005a 03F00203 		and	r3, r3, #2
 110 005e 0493     		str	r3, [sp, #16]
 111              		.loc 1 670 3 view .LVU25
 112 0060 049B     		ldr	r3, [sp, #16]
 113              	.LBE7:
 114              		.loc 1 670 3 view .LVU26
 671:Core/Src/main.c **** 
 672:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 673:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 115              		.loc 1 673 3 view .LVU27
 116 0062 194D     		ldr	r5, .L3+4
 117 0064 2246     		mov	r2, r4
 118 0066 2021     		movs	r1, #32
 119 0068 2846     		mov	r0, r5
 120 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 121              	.LVL0:
 674:Core/Src/main.c **** 
 675:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 676:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 122              		.loc 1 676 3 view .LVU28
 123              		.loc 1 676 23 is_stmt 0 view .LVU29
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 15


 124 006e 4FF40053 		mov	r3, #8192
 125 0072 0593     		str	r3, [sp, #20]
 677:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 126              		.loc 1 677 3 is_stmt 1 view .LVU30
 127              		.loc 1 677 24 is_stmt 0 view .LVU31
 128 0074 4FF40413 		mov	r3, #2162688
 129 0078 0693     		str	r3, [sp, #24]
 678:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 130              		.loc 1 678 3 is_stmt 1 view .LVU32
 131              		.loc 1 678 24 is_stmt 0 view .LVU33
 132 007a 0794     		str	r4, [sp, #28]
 679:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 133              		.loc 1 679 3 is_stmt 1 view .LVU34
 134 007c 134E     		ldr	r6, .L3+8
 135 007e 05A9     		add	r1, sp, #20
 136 0080 3046     		mov	r0, r6
 137 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL1:
 680:Core/Src/main.c **** 
 681:Core/Src/main.c ****   /*Configure GPIO pin : PC2 */
 682:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 139              		.loc 1 682 3 view .LVU35
 140              		.loc 1 682 23 is_stmt 0 view .LVU36
 141 0086 0423     		movs	r3, #4
 142 0088 0593     		str	r3, [sp, #20]
 683:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 143              		.loc 1 683 3 is_stmt 1 view .LVU37
 144              		.loc 1 683 24 is_stmt 0 view .LVU38
 145 008a 4FF48813 		mov	r3, #1114112
 146 008e 0693     		str	r3, [sp, #24]
 684:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 147              		.loc 1 684 3 is_stmt 1 view .LVU39
 148              		.loc 1 684 24 is_stmt 0 view .LVU40
 149 0090 0794     		str	r4, [sp, #28]
 685:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 150              		.loc 1 685 3 is_stmt 1 view .LVU41
 151 0092 05A9     		add	r1, sp, #20
 152 0094 3046     		mov	r0, r6
 153 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 154              	.LVL2:
 686:Core/Src/main.c **** 
 687:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 688:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 155              		.loc 1 688 3 view .LVU42
 156              		.loc 1 688 23 is_stmt 0 view .LVU43
 157 009a 2023     		movs	r3, #32
 158 009c 0593     		str	r3, [sp, #20]
 689:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 159              		.loc 1 689 3 is_stmt 1 view .LVU44
 160              		.loc 1 689 24 is_stmt 0 view .LVU45
 161 009e 0123     		movs	r3, #1
 162 00a0 0693     		str	r3, [sp, #24]
 690:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 163              		.loc 1 690 3 is_stmt 1 view .LVU46
 164              		.loc 1 690 24 is_stmt 0 view .LVU47
 165 00a2 0794     		str	r4, [sp, #28]
 691:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 16


 166              		.loc 1 691 3 is_stmt 1 view .LVU48
 167              		.loc 1 691 25 is_stmt 0 view .LVU49
 168 00a4 0894     		str	r4, [sp, #32]
 692:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 169              		.loc 1 692 3 is_stmt 1 view .LVU50
 170 00a6 05A9     		add	r1, sp, #20
 171 00a8 2846     		mov	r0, r5
 172 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 173              	.LVL3:
 693:Core/Src/main.c **** 
 694:Core/Src/main.c ****   /* EXTI interrupt init*/
 695:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 174              		.loc 1 695 3 view .LVU51
 175 00ae 2246     		mov	r2, r4
 176 00b0 2146     		mov	r1, r4
 177 00b2 0820     		movs	r0, #8
 178 00b4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 179              	.LVL4:
 696:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 180              		.loc 1 696 3 view .LVU52
 181 00b8 0820     		movs	r0, #8
 182 00ba FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 183              	.LVL5:
 697:Core/Src/main.c **** 
 698:Core/Src/main.c **** }
 184              		.loc 1 698 1 is_stmt 0 view .LVU53
 185 00be 0AB0     		add	sp, sp, #40
 186              	.LCFI2:
 187              		.cfi_def_cfa_offset 16
 188              		@ sp needed
 189 00c0 70BD     		pop	{r4, r5, r6, pc}
 190              	.L4:
 191 00c2 00BF     		.align	2
 192              	.L3:
 193 00c4 00380240 		.word	1073887232
 194 00c8 00000240 		.word	1073872896
 195 00cc 00080240 		.word	1073874944
 196              		.cfi_endproc
 197              	.LFE153:
 199              		.section	.text.MX_DMA_Init,"ax",%progbits
 200              		.align	1
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	MX_DMA_Init:
 206              	.LFB152:
 645:Core/Src/main.c **** 
 207              		.loc 1 645 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 00B5     		push	{lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 14, -4
 215 0002 83B0     		sub	sp, sp, #12
 216              	.LCFI4:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 17


 217              		.cfi_def_cfa_offset 16
 648:Core/Src/main.c **** 
 218              		.loc 1 648 3 view .LVU55
 219              	.LBB8:
 648:Core/Src/main.c **** 
 220              		.loc 1 648 3 view .LVU56
 221 0004 0021     		movs	r1, #0
 222 0006 0191     		str	r1, [sp, #4]
 648:Core/Src/main.c **** 
 223              		.loc 1 648 3 view .LVU57
 224 0008 094B     		ldr	r3, .L7
 225 000a 1A6B     		ldr	r2, [r3, #48]
 226 000c 42F40012 		orr	r2, r2, #2097152
 227 0010 1A63     		str	r2, [r3, #48]
 648:Core/Src/main.c **** 
 228              		.loc 1 648 3 view .LVU58
 229 0012 1B6B     		ldr	r3, [r3, #48]
 230 0014 03F40013 		and	r3, r3, #2097152
 231 0018 0193     		str	r3, [sp, #4]
 648:Core/Src/main.c **** 
 232              		.loc 1 648 3 view .LVU59
 233 001a 019B     		ldr	r3, [sp, #4]
 234              	.LBE8:
 648:Core/Src/main.c **** 
 235              		.loc 1 648 3 view .LVU60
 652:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 236              		.loc 1 652 3 view .LVU61
 237 001c 0A46     		mov	r2, r1
 238 001e 1120     		movs	r0, #17
 239 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 240              	.LVL6:
 653:Core/Src/main.c **** 
 241              		.loc 1 653 3 view .LVU62
 242 0024 1120     		movs	r0, #17
 243 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 244              	.LVL7:
 655:Core/Src/main.c **** 
 245              		.loc 1 655 1 is_stmt 0 view .LVU63
 246 002a 03B0     		add	sp, sp, #12
 247              	.LCFI5:
 248              		.cfi_def_cfa_offset 4
 249              		@ sp needed
 250 002c 5DF804FB 		ldr	pc, [sp], #4
 251              	.L8:
 252              		.align	2
 253              	.L7:
 254 0030 00380240 		.word	1073887232
 255              		.cfi_endproc
 256              	.LFE152:
 258              		.section	.text.lcd_send_cmd,"ax",%progbits
 259              		.align	1
 260              		.global	lcd_send_cmd
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	lcd_send_cmd:
 266              	.LVL8:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 18


 267              	.LFB138:
 347:Core/Src/main.c ****   char data_u, data_l;
 268              		.loc 1 347 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 8
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 347:Core/Src/main.c ****   char data_u, data_l;
 272              		.loc 1 347 1 is_stmt 0 view .LVU65
 273 0000 00B5     		push	{lr}
 274              	.LCFI6:
 275              		.cfi_def_cfa_offset 4
 276              		.cfi_offset 14, -4
 277 0002 85B0     		sub	sp, sp, #20
 278              	.LCFI7:
 279              		.cfi_def_cfa_offset 24
 348:Core/Src/main.c **** 	uint8_t data_t[4];
 280              		.loc 1 348 3 is_stmt 1 view .LVU66
 349:Core/Src/main.c **** 	data_u = (cmd&0xf0);
 281              		.loc 1 349 2 view .LVU67
 350:Core/Src/main.c **** 	data_l = ((cmd<<4)&0xf0);
 282              		.loc 1 350 2 view .LVU68
 350:Core/Src/main.c **** 	data_l = ((cmd<<4)&0xf0);
 283              		.loc 1 350 9 is_stmt 0 view .LVU69
 284 0004 00F0F003 		and	r3, r0, #240
 285              	.LVL9:
 351:Core/Src/main.c **** 	data_t[0] = data_u|0x0C;  //en=1, rs=0
 286              		.loc 1 351 2 is_stmt 1 view .LVU70
 351:Core/Src/main.c **** 	data_t[0] = data_u|0x0C;  //en=1, rs=0
 287              		.loc 1 351 16 is_stmt 0 view .LVU71
 288 0008 0001     		lsls	r0, r0, #4
 289              	.LVL10:
 351:Core/Src/main.c **** 	data_t[0] = data_u|0x0C;  //en=1, rs=0
 290              		.loc 1 351 9 view .LVU72
 291 000a C0B2     		uxtb	r0, r0
 292              	.LVL11:
 352:Core/Src/main.c **** 	data_t[1] = data_u|0x08;  //en=0, rs=0
 293              		.loc 1 352 2 is_stmt 1 view .LVU73
 352:Core/Src/main.c **** 	data_t[1] = data_u|0x08;  //en=0, rs=0
 294              		.loc 1 352 12 is_stmt 0 view .LVU74
 295 000c 43F00C02 		orr	r2, r3, #12
 296 0010 8DF80C20 		strb	r2, [sp, #12]
 353:Core/Src/main.c **** 	data_t[2] = data_l|0x0C;  //en=1, rs=0
 297              		.loc 1 353 2 is_stmt 1 view .LVU75
 353:Core/Src/main.c **** 	data_t[2] = data_l|0x0C;  //en=1, rs=0
 298              		.loc 1 353 12 is_stmt 0 view .LVU76
 299 0014 43F00803 		orr	r3, r3, #8
 300              	.LVL12:
 353:Core/Src/main.c **** 	data_t[2] = data_l|0x0C;  //en=1, rs=0
 301              		.loc 1 353 12 view .LVU77
 302 0018 8DF80D30 		strb	r3, [sp, #13]
 354:Core/Src/main.c **** 	data_t[3] = data_l|0x08;  //en=0, rs=0
 303              		.loc 1 354 2 is_stmt 1 view .LVU78
 354:Core/Src/main.c **** 	data_t[3] = data_l|0x08;  //en=0, rs=0
 304              		.loc 1 354 12 is_stmt 0 view .LVU79
 305 001c 40F00C03 		orr	r3, r0, #12
 306 0020 8DF80E30 		strb	r3, [sp, #14]
 355:Core/Src/main.c **** 	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 19


 307              		.loc 1 355 2 is_stmt 1 view .LVU80
 355:Core/Src/main.c **** 	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 308              		.loc 1 355 12 is_stmt 0 view .LVU81
 309 0024 40F00800 		orr	r0, r0, #8
 310              	.LVL13:
 355:Core/Src/main.c **** 	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 311              		.loc 1 355 12 view .LVU82
 312 0028 8DF80F00 		strb	r0, [sp, #15]
 356:Core/Src/main.c **** }
 313              		.loc 1 356 2 is_stmt 1 view .LVU83
 314 002c 6423     		movs	r3, #100
 315 002e 0093     		str	r3, [sp]
 316 0030 0423     		movs	r3, #4
 317 0032 03AA     		add	r2, sp, #12
 318 0034 4E21     		movs	r1, #78
 319 0036 0348     		ldr	r0, .L11
 320 0038 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 321              	.LVL14:
 357:Core/Src/main.c **** 
 322              		.loc 1 357 1 is_stmt 0 view .LVU84
 323 003c 05B0     		add	sp, sp, #20
 324              	.LCFI8:
 325              		.cfi_def_cfa_offset 4
 326              		@ sp needed
 327 003e 5DF804FB 		ldr	pc, [sp], #4
 328              	.L12:
 329 0042 00BF     		.align	2
 330              	.L11:
 331 0044 00000000 		.word	.LANCHOR0
 332              		.cfi_endproc
 333              	.LFE138:
 335              		.section	.text.lcd_send_data,"ax",%progbits
 336              		.align	1
 337              		.global	lcd_send_data
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	lcd_send_data:
 343              	.LVL15:
 344              	.LFB139:
 360:Core/Src/main.c **** 	char data_u, data_l;
 345              		.loc 1 360 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 360:Core/Src/main.c **** 	char data_u, data_l;
 349              		.loc 1 360 1 is_stmt 0 view .LVU86
 350 0000 00B5     		push	{lr}
 351              	.LCFI9:
 352              		.cfi_def_cfa_offset 4
 353              		.cfi_offset 14, -4
 354 0002 85B0     		sub	sp, sp, #20
 355              	.LCFI10:
 356              		.cfi_def_cfa_offset 24
 361:Core/Src/main.c **** 	uint8_t data_t[4];
 357              		.loc 1 361 2 is_stmt 1 view .LVU87
 362:Core/Src/main.c **** 	data_u = (data&0xf0);
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 20


 358              		.loc 1 362 2 view .LVU88
 363:Core/Src/main.c **** 	data_l = ((data<<4)&0xf0);
 359              		.loc 1 363 2 view .LVU89
 363:Core/Src/main.c **** 	data_l = ((data<<4)&0xf0);
 360              		.loc 1 363 9 is_stmt 0 view .LVU90
 361 0004 00F0F003 		and	r3, r0, #240
 362              	.LVL16:
 364:Core/Src/main.c **** 	data_t[0] = data_u|0x0D;  //en=1, rs=1
 363              		.loc 1 364 2 is_stmt 1 view .LVU91
 364:Core/Src/main.c **** 	data_t[0] = data_u|0x0D;  //en=1, rs=1
 364              		.loc 1 364 17 is_stmt 0 view .LVU92
 365 0008 0001     		lsls	r0, r0, #4
 366              	.LVL17:
 364:Core/Src/main.c **** 	data_t[0] = data_u|0x0D;  //en=1, rs=1
 367              		.loc 1 364 9 view .LVU93
 368 000a C0B2     		uxtb	r0, r0
 369              	.LVL18:
 365:Core/Src/main.c **** 	data_t[1] = data_u|0x09;  //en=0, rs=1
 370              		.loc 1 365 2 is_stmt 1 view .LVU94
 365:Core/Src/main.c **** 	data_t[1] = data_u|0x09;  //en=0, rs=1
 371              		.loc 1 365 12 is_stmt 0 view .LVU95
 372 000c 43F00D02 		orr	r2, r3, #13
 373 0010 8DF80C20 		strb	r2, [sp, #12]
 366:Core/Src/main.c **** 	data_t[2] = data_l|0x0D;  //en=1, rs=1
 374              		.loc 1 366 2 is_stmt 1 view .LVU96
 366:Core/Src/main.c **** 	data_t[2] = data_l|0x0D;  //en=1, rs=1
 375              		.loc 1 366 12 is_stmt 0 view .LVU97
 376 0014 43F00903 		orr	r3, r3, #9
 377              	.LVL19:
 366:Core/Src/main.c **** 	data_t[2] = data_l|0x0D;  //en=1, rs=1
 378              		.loc 1 366 12 view .LVU98
 379 0018 8DF80D30 		strb	r3, [sp, #13]
 367:Core/Src/main.c **** 	data_t[3] = data_l|0x09;  //en=0, rs=1
 380              		.loc 1 367 2 is_stmt 1 view .LVU99
 367:Core/Src/main.c **** 	data_t[3] = data_l|0x09;  //en=0, rs=1
 381              		.loc 1 367 12 is_stmt 0 view .LVU100
 382 001c 40F00D03 		orr	r3, r0, #13
 383 0020 8DF80E30 		strb	r3, [sp, #14]
 368:Core/Src/main.c **** 	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 384              		.loc 1 368 2 is_stmt 1 view .LVU101
 368:Core/Src/main.c **** 	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 385              		.loc 1 368 12 is_stmt 0 view .LVU102
 386 0024 40F00900 		orr	r0, r0, #9
 387              	.LVL20:
 368:Core/Src/main.c **** 	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 388              		.loc 1 368 12 view .LVU103
 389 0028 8DF80F00 		strb	r0, [sp, #15]
 369:Core/Src/main.c **** }
 390              		.loc 1 369 2 is_stmt 1 view .LVU104
 391 002c 6423     		movs	r3, #100
 392 002e 0093     		str	r3, [sp]
 393 0030 0423     		movs	r3, #4
 394 0032 03AA     		add	r2, sp, #12
 395 0034 4E21     		movs	r1, #78
 396 0036 0348     		ldr	r0, .L15
 397 0038 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 398              	.LVL21:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 21


 370:Core/Src/main.c **** 
 399              		.loc 1 370 1 is_stmt 0 view .LVU105
 400 003c 05B0     		add	sp, sp, #20
 401              	.LCFI11:
 402              		.cfi_def_cfa_offset 4
 403              		@ sp needed
 404 003e 5DF804FB 		ldr	pc, [sp], #4
 405              	.L16:
 406 0042 00BF     		.align	2
 407              	.L15:
 408 0044 00000000 		.word	.LANCHOR0
 409              		.cfi_endproc
 410              	.LFE139:
 412              		.section	.text.lcd_clear,"ax",%progbits
 413              		.align	1
 414              		.global	lcd_clear
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 419              	lcd_clear:
 420              	.LFB140:
 373:Core/Src/main.c **** 	lcd_send_cmd (0x00);
 421              		.loc 1 373 1 is_stmt 1 view -0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425 0000 10B5     		push	{r4, lr}
 426              	.LCFI12:
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 4, -8
 429              		.cfi_offset 14, -4
 374:Core/Src/main.c **** 	for (int i=0; i<100; i++)
 430              		.loc 1 374 2 view .LVU107
 431 0002 0020     		movs	r0, #0
 432 0004 FFF7FEFF 		bl	lcd_send_cmd
 433              	.LVL22:
 375:Core/Src/main.c **** 	{
 434              		.loc 1 375 2 view .LVU108
 435              	.LBB9:
 375:Core/Src/main.c **** 	{
 436              		.loc 1 375 7 view .LVU109
 375:Core/Src/main.c **** 	{
 437              		.loc 1 375 11 is_stmt 0 view .LVU110
 438 0008 0024     		movs	r4, #0
 375:Core/Src/main.c **** 	{
 439              		.loc 1 375 2 view .LVU111
 440 000a 03E0     		b	.L18
 441              	.LVL23:
 442              	.L19:
 377:Core/Src/main.c **** 	}
 443              		.loc 1 377 3 is_stmt 1 discriminator 3 view .LVU112
 444 000c 2020     		movs	r0, #32
 445 000e FFF7FEFF 		bl	lcd_send_data
 446              	.LVL24:
 375:Core/Src/main.c **** 	{
 447              		.loc 1 375 23 discriminator 3 view .LVU113
 375:Core/Src/main.c **** 	{
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 22


 448              		.loc 1 375 24 is_stmt 0 discriminator 3 view .LVU114
 449 0012 0134     		adds	r4, r4, #1
 450              	.LVL25:
 451              	.L18:
 375:Core/Src/main.c **** 	{
 452              		.loc 1 375 16 is_stmt 1 discriminator 1 view .LVU115
 375:Core/Src/main.c **** 	{
 453              		.loc 1 375 2 is_stmt 0 discriminator 1 view .LVU116
 454 0014 632C     		cmp	r4, #99
 455 0016 F9DD     		ble	.L19
 456              	.LBE9:
 379:Core/Src/main.c **** 
 457              		.loc 1 379 1 view .LVU117
 458 0018 10BD     		pop	{r4, pc}
 379:Core/Src/main.c **** 
 459              		.loc 1 379 1 view .LVU118
 460              		.cfi_endproc
 461              	.LFE140:
 463              		.section	.text.lcd_init,"ax",%progbits
 464              		.align	1
 465              		.global	lcd_init
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 470              	lcd_init:
 471              	.LFB141:
 382:Core/Src/main.c **** 	// 4 bit initialisation
 472              		.loc 1 382 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476 0000 08B5     		push	{r3, lr}
 477              	.LCFI13:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 3, -8
 480              		.cfi_offset 14, -4
 384:Core/Src/main.c **** 	lcd_send_cmd (0x30);
 481              		.loc 1 384 2 view .LVU120
 482 0002 3220     		movs	r0, #50
 483 0004 FFF7FEFF 		bl	HAL_Delay
 484              	.LVL26:
 385:Core/Src/main.c **** 	HAL_Delay(5);  // wait for >4.1ms
 485              		.loc 1 385 2 view .LVU121
 486 0008 3020     		movs	r0, #48
 487 000a FFF7FEFF 		bl	lcd_send_cmd
 488              	.LVL27:
 386:Core/Src/main.c **** 	lcd_send_cmd (0x30);
 489              		.loc 1 386 2 view .LVU122
 490 000e 0520     		movs	r0, #5
 491 0010 FFF7FEFF 		bl	HAL_Delay
 492              	.LVL28:
 387:Core/Src/main.c **** 	HAL_Delay(1);  // wait for >100us
 493              		.loc 1 387 2 view .LVU123
 494 0014 3020     		movs	r0, #48
 495 0016 FFF7FEFF 		bl	lcd_send_cmd
 496              	.LVL29:
 388:Core/Src/main.c **** 	lcd_send_cmd (0x30);
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 23


 497              		.loc 1 388 2 view .LVU124
 498 001a 0120     		movs	r0, #1
 499 001c FFF7FEFF 		bl	HAL_Delay
 500              	.LVL30:
 389:Core/Src/main.c **** 	HAL_Delay(10);
 501              		.loc 1 389 2 view .LVU125
 502 0020 3020     		movs	r0, #48
 503 0022 FFF7FEFF 		bl	lcd_send_cmd
 504              	.LVL31:
 390:Core/Src/main.c **** 	lcd_send_cmd (0x20);  // 4bit mode
 505              		.loc 1 390 2 view .LVU126
 506 0026 0A20     		movs	r0, #10
 507 0028 FFF7FEFF 		bl	HAL_Delay
 508              	.LVL32:
 391:Core/Src/main.c **** 	HAL_Delay(10);
 509              		.loc 1 391 2 view .LVU127
 510 002c 2020     		movs	r0, #32
 511 002e FFF7FEFF 		bl	lcd_send_cmd
 512              	.LVL33:
 392:Core/Src/main.c **** 
 513              		.loc 1 392 2 view .LVU128
 514 0032 0A20     		movs	r0, #10
 515 0034 FFF7FEFF 		bl	HAL_Delay
 516              	.LVL34:
 395:Core/Src/main.c **** 	HAL_Delay(1);
 517              		.loc 1 395 2 view .LVU129
 518 0038 2820     		movs	r0, #40
 519 003a FFF7FEFF 		bl	lcd_send_cmd
 520              	.LVL35:
 396:Core/Src/main.c **** 	lcd_send_cmd (0x08); //Display on/off control --> D=0,C=0, B=0  ---> display off
 521              		.loc 1 396 2 view .LVU130
 522 003e 0120     		movs	r0, #1
 523 0040 FFF7FEFF 		bl	HAL_Delay
 524              	.LVL36:
 397:Core/Src/main.c **** 	HAL_Delay(1);
 525              		.loc 1 397 2 view .LVU131
 526 0044 0820     		movs	r0, #8
 527 0046 FFF7FEFF 		bl	lcd_send_cmd
 528              	.LVL37:
 398:Core/Src/main.c **** 	lcd_send_cmd (0x01);  // clear display
 529              		.loc 1 398 2 view .LVU132
 530 004a 0120     		movs	r0, #1
 531 004c FFF7FEFF 		bl	HAL_Delay
 532              	.LVL38:
 399:Core/Src/main.c **** 	HAL_Delay(1);
 533              		.loc 1 399 2 view .LVU133
 534 0050 0120     		movs	r0, #1
 535 0052 FFF7FEFF 		bl	lcd_send_cmd
 536              	.LVL39:
 400:Core/Src/main.c **** 	lcd_send_cmd (0x06); //Entry mode set --> I/D = 1 (increment cursor) & S = 0 (no shift)
 537              		.loc 1 400 2 view .LVU134
 538 0056 0120     		movs	r0, #1
 539 0058 FFF7FEFF 		bl	HAL_Delay
 540              	.LVL40:
 401:Core/Src/main.c **** 	HAL_Delay(1);
 541              		.loc 1 401 2 view .LVU135
 542 005c 0620     		movs	r0, #6
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 24


 543 005e FFF7FEFF 		bl	lcd_send_cmd
 544              	.LVL41:
 402:Core/Src/main.c **** 	lcd_send_cmd (0x0C); //Display on/off control --> D = 1, C and B = 0. (Cursor and blink, last two 
 545              		.loc 1 402 2 view .LVU136
 546 0062 0120     		movs	r0, #1
 547 0064 FFF7FEFF 		bl	HAL_Delay
 548              	.LVL42:
 403:Core/Src/main.c **** }
 549              		.loc 1 403 2 view .LVU137
 550 0068 0C20     		movs	r0, #12
 551 006a FFF7FEFF 		bl	lcd_send_cmd
 552              	.LVL43:
 404:Core/Src/main.c **** 
 553              		.loc 1 404 1 is_stmt 0 view .LVU138
 554 006e 08BD     		pop	{r3, pc}
 555              		.cfi_endproc
 556              	.LFE141:
 558              		.section	.text.lcd_send_string,"ax",%progbits
 559              		.align	1
 560              		.global	lcd_send_string
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 565              	lcd_send_string:
 566              	.LVL44:
 567              	.LFB142:
 407:Core/Src/main.c **** 	while (*str) lcd_send_data (*str++);
 568              		.loc 1 407 1 is_stmt 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 407:Core/Src/main.c **** 	while (*str) lcd_send_data (*str++);
 572              		.loc 1 407 1 is_stmt 0 view .LVU140
 573 0000 10B5     		push	{r4, lr}
 574              	.LCFI14:
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 4, -8
 577              		.cfi_offset 14, -4
 578 0002 0446     		mov	r4, r0
 408:Core/Src/main.c **** }
 579              		.loc 1 408 2 is_stmt 1 view .LVU141
 408:Core/Src/main.c **** }
 580              		.loc 1 408 8 is_stmt 0 view .LVU142
 581 0004 02E0     		b	.L24
 582              	.LVL45:
 583              	.L25:
 408:Core/Src/main.c **** }
 584              		.loc 1 408 15 is_stmt 1 discriminator 2 view .LVU143
 408:Core/Src/main.c **** }
 585              		.loc 1 408 34 is_stmt 0 discriminator 2 view .LVU144
 586 0006 0134     		adds	r4, r4, #1
 587              	.LVL46:
 408:Core/Src/main.c **** }
 588              		.loc 1 408 15 discriminator 2 view .LVU145
 589 0008 FFF7FEFF 		bl	lcd_send_data
 590              	.LVL47:
 591              	.L24:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 25


 408:Core/Src/main.c **** }
 592              		.loc 1 408 8 is_stmt 1 discriminator 1 view .LVU146
 408:Core/Src/main.c **** }
 593              		.loc 1 408 9 is_stmt 0 discriminator 1 view .LVU147
 594 000c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 408:Core/Src/main.c **** }
 595              		.loc 1 408 8 discriminator 1 view .LVU148
 596 000e 0028     		cmp	r0, #0
 597 0010 F9D1     		bne	.L25
 409:Core/Src/main.c **** 
 598              		.loc 1 409 1 view .LVU149
 599 0012 10BD     		pop	{r4, pc}
 409:Core/Src/main.c **** 
 600              		.loc 1 409 1 view .LVU150
 601              		.cfi_endproc
 602              	.LFE142:
 604              		.section	.rodata.MPU6050_Init.str1.4,"aMS",%progbits,1
 605              		.align	2
 606              	.LC0:
 607 0000 53656E73 		.ascii	"Sensor Not Resp\000"
 607      6F72204E 
 607      6F742052 
 607      65737000 
 608              		.section	.text.MPU6050_Init,"ax",%progbits
 609              		.align	1
 610              		.global	MPU6050_Init
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 615              	MPU6050_Init:
 616              	.LFB133:
 194:Core/Src/main.c **** 
 617              		.loc 1 194 25 is_stmt 1 view -0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 8
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 622              	.LCFI15:
 623              		.cfi_def_cfa_offset 24
 624              		.cfi_offset 4, -24
 625              		.cfi_offset 5, -20
 626              		.cfi_offset 6, -16
 627              		.cfi_offset 7, -12
 628              		.cfi_offset 8, -8
 629              		.cfi_offset 14, -4
 630 0004 86B0     		sub	sp, sp, #24
 631              	.LCFI16:
 632              		.cfi_def_cfa_offset 48
 196:Core/Src/main.c **** 	uint8_t Data;
 633              		.loc 1 196 2 view .LVU152
 197:Core/Src/main.c **** 
 634              		.loc 1 197 2 view .LVU153
 200:Core/Src/main.c **** 
 635              		.loc 1 200 2 view .LVU154
 636 0006 4FF47A73 		mov	r3, #1000
 637 000a 0293     		str	r3, [sp, #8]
 638 000c 0123     		movs	r3, #1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 26


 639 000e 0193     		str	r3, [sp, #4]
 640 0010 0DF11702 		add	r2, sp, #23
 641 0014 0092     		str	r2, [sp]
 642 0016 7522     		movs	r2, #117
 643 0018 D021     		movs	r1, #208
 644 001a 2348     		ldr	r0, .L32
 645 001c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 646              	.LVL48:
 203:Core/Src/main.c **** 		// Power management register 0x6B we should write all 0's to wake the sensor up
 647              		.loc 1 203 2 view .LVU155
 203:Core/Src/main.c **** 		// Power management register 0x6B we should write all 0's to wake the sensor up
 648              		.loc 1 203 12 is_stmt 0 view .LVU156
 649 0020 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 203:Core/Src/main.c **** 		// Power management register 0x6B we should write all 0's to wake the sensor up
 650              		.loc 1 203 5 view .LVU157
 651 0024 682B     		cmp	r3, #104
 652 0026 09D0     		beq	.L31
 224:Core/Src/main.c **** 		HAL_Delay(5000);
 653              		.loc 1 224 3 is_stmt 1 view .LVU158
 654 0028 2048     		ldr	r0, .L32+4
 655 002a FFF7FEFF 		bl	lcd_send_string
 656              	.LVL49:
 225:Core/Src/main.c **** 	}
 657              		.loc 1 225 3 view .LVU159
 658 002e 41F28830 		movw	r0, #5000
 659 0032 FFF7FEFF 		bl	HAL_Delay
 660              	.LVL50:
 661              	.L27:
 227:Core/Src/main.c **** 
 662              		.loc 1 227 1 is_stmt 0 view .LVU160
 663 0036 06B0     		add	sp, sp, #24
 664              	.LCFI17:
 665              		.cfi_remember_state
 666              		.cfi_def_cfa_offset 24
 667              		@ sp needed
 668 0038 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 669              	.L31:
 670              	.LCFI18:
 671              		.cfi_restore_state
 205:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, PWR_MGMT_1_REG, 1, &Data, 1, 1000);
 672              		.loc 1 205 3 is_stmt 1 view .LVU161
 205:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, PWR_MGMT_1_REG, 1, &Data, 1, 1000);
 673              		.loc 1 205 8 is_stmt 0 view .LVU162
 674 003c 4FF00008 		mov	r8, #0
 675 0040 8DF81680 		strb	r8, [sp, #22]
 206:Core/Src/main.c **** 
 676              		.loc 1 206 3 is_stmt 1 view .LVU163
 677 0044 184D     		ldr	r5, .L32
 678 0046 4FF47A77 		mov	r7, #1000
 679 004a 0297     		str	r7, [sp, #8]
 680 004c 0124     		movs	r4, #1
 681 004e 0194     		str	r4, [sp, #4]
 682 0050 0DF11606 		add	r6, sp, #22
 683 0054 0096     		str	r6, [sp]
 684 0056 2346     		mov	r3, r4
 685 0058 6B22     		movs	r2, #107
 686 005a D021     		movs	r1, #208
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 27


 687 005c 2846     		mov	r0, r5
 688 005e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 689              	.LVL51:
 209:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, SMPLRT_DIV_REG, 1, &Data, 1, 1000);
 690              		.loc 1 209 3 view .LVU164
 209:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, SMPLRT_DIV_REG, 1, &Data, 1, 1000);
 691              		.loc 1 209 8 is_stmt 0 view .LVU165
 692 0062 0723     		movs	r3, #7
 693 0064 8DF81630 		strb	r3, [sp, #22]
 210:Core/Src/main.c **** 
 694              		.loc 1 210 3 is_stmt 1 view .LVU166
 695 0068 0297     		str	r7, [sp, #8]
 696 006a 0194     		str	r4, [sp, #4]
 697 006c 0096     		str	r6, [sp]
 698 006e 2346     		mov	r3, r4
 699 0070 1922     		movs	r2, #25
 700 0072 D021     		movs	r1, #208
 701 0074 2846     		mov	r0, r5
 702 0076 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 703              	.LVL52:
 214:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, ACCEL_CONFIG_REG, 1, &Data, 1, 1000);
 704              		.loc 1 214 3 view .LVU167
 214:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, ACCEL_CONFIG_REG, 1, &Data, 1, 1000);
 705              		.loc 1 214 8 is_stmt 0 view .LVU168
 706 007a 8DF81680 		strb	r8, [sp, #22]
 215:Core/Src/main.c **** 
 707              		.loc 1 215 3 is_stmt 1 view .LVU169
 708 007e 0297     		str	r7, [sp, #8]
 709 0080 0194     		str	r4, [sp, #4]
 710 0082 0096     		str	r6, [sp]
 711 0084 2346     		mov	r3, r4
 712 0086 1C22     		movs	r2, #28
 713 0088 D021     		movs	r1, #208
 714 008a 2846     		mov	r0, r5
 715 008c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 716              	.LVL53:
 219:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, GYRO_CONFIG_REG, 1, &Data, 1, 1000);
 717              		.loc 1 219 3 view .LVU170
 219:Core/Src/main.c **** 		HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, GYRO_CONFIG_REG, 1, &Data, 1, 1000);
 718              		.loc 1 219 8 is_stmt 0 view .LVU171
 719 0090 8DF81680 		strb	r8, [sp, #22]
 220:Core/Src/main.c **** 	}
 720              		.loc 1 220 3 is_stmt 1 view .LVU172
 721 0094 0297     		str	r7, [sp, #8]
 722 0096 0194     		str	r4, [sp, #4]
 723 0098 0096     		str	r6, [sp]
 724 009a 2346     		mov	r3, r4
 725 009c 1B22     		movs	r2, #27
 726 009e D021     		movs	r1, #208
 727 00a0 2846     		mov	r0, r5
 728 00a2 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 729              	.LVL54:
 730 00a6 C6E7     		b	.L27
 731              	.L33:
 732              		.align	2
 733              	.L32:
 734 00a8 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 28


 735 00ac 00000000 		.word	.LC0
 736              		.cfi_endproc
 737              	.LFE133:
 739              		.section	.rodata.accel_cal_prep.str1.4,"aMS",%progbits,1
 740              		.align	2
 741              	.LC1:
 742 0000 506F7369 		.ascii	"Position the\000"
 742      74696F6E 
 742      20746865 
 742      00
 743 000d 000000   		.align	2
 744              	.LC2:
 745 0010 61636365 		.ascii	"accelerometer to its\000"
 745      6C65726F 
 745      6D657465 
 745      7220746F 
 745      20697473 
 746 0025 000000   		.align	2
 747              	.LC3:
 748 0028 7A65726F 		.ascii	"zero position\000"
 748      20706F73 
 748      6974696F 
 748      6E00
 749              		.section	.text.accel_cal_prep,"ax",%progbits
 750              		.align	1
 751              		.global	accel_cal_prep
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 756              	accel_cal_prep:
 757              	.LFB136:
 312:Core/Src/main.c **** 	// Prepare to calibrate the accelerometer
 758              		.loc 1 312 27 view -0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762 0000 08B5     		push	{r3, lr}
 763              	.LCFI19:
 764              		.cfi_def_cfa_offset 8
 765              		.cfi_offset 3, -8
 766              		.cfi_offset 14, -4
 314:Core/Src/main.c **** 
 767              		.loc 1 314 2 view .LVU174
 314:Core/Src/main.c **** 
 768              		.loc 1 314 7 is_stmt 0 view .LVU175
 769 0002 0C4B     		ldr	r3, .L36
 770 0004 0022     		movs	r2, #0
 771 0006 1A70     		strb	r2, [r3]
 316:Core/Src/main.c **** 
 772              		.loc 1 316 2 is_stmt 1 view .LVU176
 773 0008 FFF7FEFF 		bl	lcd_clear
 774              	.LVL55:
 318:Core/Src/main.c **** 	lcd_send_string("Position the");
 775              		.loc 1 318 2 view .LVU177
 776 000c 8020     		movs	r0, #128
 777 000e FFF7FEFF 		bl	lcd_send_cmd
 778              	.LVL56:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 29


 319:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x40);
 779              		.loc 1 319 2 view .LVU178
 780 0012 0948     		ldr	r0, .L36+4
 781 0014 FFF7FEFF 		bl	lcd_send_string
 782              	.LVL57:
 320:Core/Src/main.c **** 	lcd_send_string("accelerometer to its");
 783              		.loc 1 320 2 view .LVU179
 784 0018 C020     		movs	r0, #192
 785 001a FFF7FEFF 		bl	lcd_send_cmd
 786              	.LVL58:
 321:Core/Src/main.c **** 	lcd_send_cmd(0x80|0x14);
 787              		.loc 1 321 2 view .LVU180
 788 001e 0748     		ldr	r0, .L36+8
 789 0020 FFF7FEFF 		bl	lcd_send_string
 790              	.LVL59:
 322:Core/Src/main.c **** 	lcd_send_string("zero position");
 791              		.loc 1 322 2 view .LVU181
 792 0024 9420     		movs	r0, #148
 793 0026 FFF7FEFF 		bl	lcd_send_cmd
 794              	.LVL60:
 323:Core/Src/main.c **** }
 795              		.loc 1 323 2 view .LVU182
 796 002a 0548     		ldr	r0, .L36+12
 797 002c FFF7FEFF 		bl	lcd_send_string
 798              	.LVL61:
 324:Core/Src/main.c **** 
 799              		.loc 1 324 1 is_stmt 0 view .LVU183
 800 0030 08BD     		pop	{r3, pc}
 801              	.L37:
 802 0032 00BF     		.align	2
 803              	.L36:
 804 0034 00000000 		.word	.LANCHOR1
 805 0038 00000000 		.word	.LC1
 806 003c 10000000 		.word	.LC2
 807 0040 28000000 		.word	.LC3
 808              		.cfi_endproc
 809              	.LFE136:
 811              		.section	.text.MPU6050_read_accel_raw,"ax",%progbits
 812              		.align	1
 813              		.global	MPU6050_read_accel_raw
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 818              	MPU6050_read_accel_raw:
 819              	.LVL62:
 820              	.LFB143:
 411:Core/Src/main.c **** 	uint8_t data[6];
 821              		.loc 1 411 105 is_stmt 1 view -0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 8
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 411:Core/Src/main.c **** 	uint8_t data[6];
 825              		.loc 1 411 105 is_stmt 0 view .LVU185
 826 0000 10B5     		push	{r4, lr}
 827              	.LCFI20:
 828              		.cfi_def_cfa_offset 8
 829              		.cfi_offset 4, -8
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 30


 830              		.cfi_offset 14, -4
 831 0002 2DED028B 		vpush.64	{d8}
 832              	.LCFI21:
 833              		.cfi_def_cfa_offset 16
 834              		.cfi_offset 80, -16
 835              		.cfi_offset 81, -12
 836 0006 86B0     		sub	sp, sp, #24
 837              	.LCFI22:
 838              		.cfi_def_cfa_offset 40
 839 0008 B0EE408A 		vmov.f32	s16, s0
 840 000c 1446     		mov	r4, r2
 412:Core/Src/main.c **** 
 841              		.loc 1 412 2 is_stmt 1 view .LVU186
 415:Core/Src/main.c **** 
 842              		.loc 1 415 2 view .LVU187
 843 000e 4FF47A73 		mov	r3, #1000
 844 0012 0293     		str	r3, [sp, #8]
 845 0014 0623     		movs	r3, #6
 846 0016 0193     		str	r3, [sp, #4]
 847 0018 04AB     		add	r3, sp, #16
 848 001a 0093     		str	r3, [sp]
 849 001c 0123     		movs	r3, #1
 850 001e 0A46     		mov	r2, r1
 851              	.LVL63:
 415:Core/Src/main.c **** 
 852              		.loc 1 415 2 is_stmt 0 view .LVU188
 853 0020 0146     		mov	r1, r0
 854              	.LVL64:
 415:Core/Src/main.c **** 
 855              		.loc 1 415 2 view .LVU189
 856 0022 1A48     		ldr	r0, .L40
 857              	.LVL65:
 415:Core/Src/main.c **** 
 858              		.loc 1 415 2 view .LVU190
 859 0024 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 860              	.LVL66:
 417:Core/Src/main.c **** 	accel_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con;
 861              		.loc 1 417 2 is_stmt 1 view .LVU191
 417:Core/Src/main.c **** 	accel_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con;
 862              		.loc 1 417 33 is_stmt 0 view .LVU192
 863 0028 9DF81020 		ldrb	r2, [sp, #16]	@ zero_extendqisi2
 417:Core/Src/main.c **** 	accel_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con;
 864              		.loc 1 417 48 view .LVU193
 865 002c 9DF81130 		ldrb	r3, [sp, #17]	@ zero_extendqisi2
 417:Core/Src/main.c **** 	accel_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con;
 866              		.loc 1 417 19 view .LVU194
 867 0030 43EA0223 		orr	r3, r3, r2, lsl #8
 868 0034 1BB2     		sxth	r3, r3
 417:Core/Src/main.c **** 	accel_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con;
 869              		.loc 1 417 53 view .LVU195
 870 0036 07EE903A 		vmov	s15, r3	@ int
 871 003a F8EEE77A 		vcvt.f32.s32	s15, s15
 872 003e 87EE887A 		vdiv.f32	s14, s15, s16
 417:Core/Src/main.c **** 	accel_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con;
 873              		.loc 1 417 16 view .LVU196
 874 0042 84ED007A 		vstr.32	s14, [r4]
 418:Core/Src/main.c **** 	accel_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 31


 875              		.loc 1 418 2 is_stmt 1 view .LVU197
 418:Core/Src/main.c **** 	accel_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con;
 876              		.loc 1 418 33 is_stmt 0 view .LVU198
 877 0046 9DF81220 		ldrb	r2, [sp, #18]	@ zero_extendqisi2
 418:Core/Src/main.c **** 	accel_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con;
 878              		.loc 1 418 48 view .LVU199
 879 004a 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2
 418:Core/Src/main.c **** 	accel_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con;
 880              		.loc 1 418 19 view .LVU200
 881 004e 43EA0223 		orr	r3, r3, r2, lsl #8
 882 0052 1BB2     		sxth	r3, r3
 418:Core/Src/main.c **** 	accel_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con;
 883              		.loc 1 418 53 view .LVU201
 884 0054 07EE903A 		vmov	s15, r3	@ int
 885 0058 F8EEE77A 		vcvt.f32.s32	s15, s15
 886 005c 87EE887A 		vdiv.f32	s14, s15, s16
 418:Core/Src/main.c **** 	accel_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con;
 887              		.loc 1 418 16 view .LVU202
 888 0060 84ED017A 		vstr.32	s14, [r4, #4]
 419:Core/Src/main.c **** 
 889              		.loc 1 419 2 is_stmt 1 view .LVU203
 419:Core/Src/main.c **** 
 890              		.loc 1 419 33 is_stmt 0 view .LVU204
 891 0064 9DF81420 		ldrb	r2, [sp, #20]	@ zero_extendqisi2
 419:Core/Src/main.c **** 
 892              		.loc 1 419 48 view .LVU205
 893 0068 9DF81530 		ldrb	r3, [sp, #21]	@ zero_extendqisi2
 419:Core/Src/main.c **** 
 894              		.loc 1 419 19 view .LVU206
 895 006c 43EA0223 		orr	r3, r3, r2, lsl #8
 896 0070 1BB2     		sxth	r3, r3
 419:Core/Src/main.c **** 
 897              		.loc 1 419 53 view .LVU207
 898 0072 07EE903A 		vmov	s15, r3	@ int
 899 0076 F8EEE77A 		vcvt.f32.s32	s15, s15
 900 007a 87EE887A 		vdiv.f32	s14, s15, s16
 419:Core/Src/main.c **** 
 901              		.loc 1 419 16 view .LVU208
 902 007e 84ED027A 		vstr.32	s14, [r4, #8]
 421:Core/Src/main.c **** }
 903              		.loc 1 421 2 is_stmt 1 view .LVU209
 422:Core/Src/main.c **** 
 904              		.loc 1 422 1 is_stmt 0 view .LVU210
 905 0082 2046     		mov	r0, r4
 906 0084 06B0     		add	sp, sp, #24
 907              	.LCFI23:
 908              		.cfi_def_cfa_offset 16
 909              		@ sp needed
 910 0086 BDEC028B 		vldm	sp!, {d8}
 911              	.LCFI24:
 912              		.cfi_restore 80
 913              		.cfi_restore 81
 914              		.cfi_def_cfa_offset 8
 915              	.LVL67:
 422:Core/Src/main.c **** 
 916              		.loc 1 422 1 view .LVU211
 917 008a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 32


 918              	.LVL68:
 919              	.L41:
 422:Core/Src/main.c **** 
 920              		.loc 1 422 1 view .LVU212
 921              		.align	2
 922              	.L40:
 923 008c 00000000 		.word	.LANCHOR0
 924              		.cfi_endproc
 925              	.LFE143:
 927              		.section	.text.MPU6050_read_accel,"ax",%progbits
 928              		.align	1
 929              		.global	MPU6050_read_accel
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 934              	MPU6050_read_accel:
 935              	.LVL69:
 936              	.LFB144:
 424:Core/Src/main.c **** 	uint8_t data[6];
 937              		.loc 1 424 121 is_stmt 1 view -0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 8
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 424:Core/Src/main.c **** 	uint8_t data[6];
 941              		.loc 1 424 121 is_stmt 0 view .LVU214
 942 0000 30B5     		push	{r4, r5, lr}
 943              	.LCFI25:
 944              		.cfi_def_cfa_offset 12
 945              		.cfi_offset 4, -12
 946              		.cfi_offset 5, -8
 947              		.cfi_offset 14, -4
 948 0002 2DED028B 		vpush.64	{d8}
 949              	.LCFI26:
 950              		.cfi_def_cfa_offset 20
 951              		.cfi_offset 80, -20
 952              		.cfi_offset 81, -16
 953 0006 87B0     		sub	sp, sp, #28
 954              	.LCFI27:
 955              		.cfi_def_cfa_offset 48
 956 0008 B0EE408A 		vmov.f32	s16, s0
 957 000c 1446     		mov	r4, r2
 958 000e 1D46     		mov	r5, r3
 425:Core/Src/main.c **** 
 959              		.loc 1 425 2 is_stmt 1 view .LVU215
 428:Core/Src/main.c **** 
 960              		.loc 1 428 2 view .LVU216
 961 0010 4FF47A73 		mov	r3, #1000
 962              	.LVL70:
 428:Core/Src/main.c **** 
 963              		.loc 1 428 2 is_stmt 0 view .LVU217
 964 0014 0293     		str	r3, [sp, #8]
 965 0016 0623     		movs	r3, #6
 966 0018 0193     		str	r3, [sp, #4]
 967 001a 04AB     		add	r3, sp, #16
 968 001c 0093     		str	r3, [sp]
 969 001e 0123     		movs	r3, #1
 970 0020 0A46     		mov	r2, r1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 33


 971              	.LVL71:
 428:Core/Src/main.c **** 
 972              		.loc 1 428 2 view .LVU218
 973 0022 0146     		mov	r1, r0
 974              	.LVL72:
 428:Core/Src/main.c **** 
 975              		.loc 1 428 2 view .LVU219
 976 0024 2048     		ldr	r0, .L44
 977              	.LVL73:
 428:Core/Src/main.c **** 
 978              		.loc 1 428 2 view .LVU220
 979 0026 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 980              	.LVL74:
 430:Core/Src/main.c **** 	accel_data[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con - accel_corr[1];
 981              		.loc 1 430 2 is_stmt 1 view .LVU221
 430:Core/Src/main.c **** 	accel_data[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con - accel_corr[1];
 982              		.loc 1 430 33 is_stmt 0 view .LVU222
 983 002a 9DF81020 		ldrb	r2, [sp, #16]	@ zero_extendqisi2
 430:Core/Src/main.c **** 	accel_data[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con - accel_corr[1];
 984              		.loc 1 430 48 view .LVU223
 985 002e 9DF81130 		ldrb	r3, [sp, #17]	@ zero_extendqisi2
 430:Core/Src/main.c **** 	accel_data[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con - accel_corr[1];
 986              		.loc 1 430 19 view .LVU224
 987 0032 43EA0223 		orr	r3, r3, r2, lsl #8
 988 0036 1BB2     		sxth	r3, r3
 430:Core/Src/main.c **** 	accel_data[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con - accel_corr[1];
 989              		.loc 1 430 53 view .LVU225
 990 0038 07EE903A 		vmov	s15, r3	@ int
 991 003c F8EEE77A 		vcvt.f32.s32	s15, s15
 992 0040 87EE887A 		vdiv.f32	s14, s15, s16
 430:Core/Src/main.c **** 	accel_data[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con - accel_corr[1];
 993              		.loc 1 430 76 view .LVU226
 994 0044 D5ED007A 		vldr.32	s15, [r5]
 430:Core/Src/main.c **** 	accel_data[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con - accel_corr[1];
 995              		.loc 1 430 64 view .LVU227
 996 0048 77EE677A 		vsub.f32	s15, s14, s15
 430:Core/Src/main.c **** 	accel_data[1] = ((int16_t)(data[2] << 8 | data[3]))/accel_con - accel_corr[1];
 997              		.loc 1 430 16 view .LVU228
 998 004c C4ED007A 		vstr.32	s15, [r4]
 431:Core/Src/main.c **** 	accel_data[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con - accel_corr[2];
 999              		.loc 1 431 2 is_stmt 1 view .LVU229
 431:Core/Src/main.c **** 	accel_data[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con - accel_corr[2];
 1000              		.loc 1 431 33 is_stmt 0 view .LVU230
 1001 0050 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 431:Core/Src/main.c **** 	accel_data[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con - accel_corr[2];
 1002              		.loc 1 431 48 view .LVU231
 1003 0054 9DF81310 		ldrb	r1, [sp, #19]	@ zero_extendqisi2
 431:Core/Src/main.c **** 	accel_data[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con - accel_corr[2];
 1004              		.loc 1 431 19 view .LVU232
 1005 0058 41EA0321 		orr	r1, r1, r3, lsl #8
 1006 005c 09B2     		sxth	r1, r1
 431:Core/Src/main.c **** 	accel_data[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con - accel_corr[2];
 1007              		.loc 1 431 53 view .LVU233
 1008 005e 07EE901A 		vmov	s15, r1	@ int
 1009 0062 F8EEE77A 		vcvt.f32.s32	s15, s15
 1010 0066 87EE887A 		vdiv.f32	s14, s15, s16
 431:Core/Src/main.c **** 	accel_data[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con - accel_corr[2];
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 34


 1011              		.loc 1 431 76 view .LVU234
 1012 006a D5ED017A 		vldr.32	s15, [r5, #4]
 431:Core/Src/main.c **** 	accel_data[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con - accel_corr[2];
 1013              		.loc 1 431 64 view .LVU235
 1014 006e 77EE677A 		vsub.f32	s15, s14, s15
 431:Core/Src/main.c **** 	accel_data[2] = ((int16_t)(data[4] << 8 | data[5]))/accel_con - accel_corr[2];
 1015              		.loc 1 431 16 view .LVU236
 1016 0072 C4ED017A 		vstr.32	s15, [r4, #4]
 432:Core/Src/main.c **** 
 1017              		.loc 1 432 2 is_stmt 1 view .LVU237
 432:Core/Src/main.c **** 
 1018              		.loc 1 432 33 is_stmt 0 view .LVU238
 1019 0076 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 432:Core/Src/main.c **** 
 1020              		.loc 1 432 48 view .LVU239
 1021 007a 9DF81510 		ldrb	r1, [sp, #21]	@ zero_extendqisi2
 432:Core/Src/main.c **** 
 1022              		.loc 1 432 19 view .LVU240
 1023 007e 41EA0321 		orr	r1, r1, r3, lsl #8
 1024 0082 09B2     		sxth	r1, r1
 432:Core/Src/main.c **** 
 1025              		.loc 1 432 53 view .LVU241
 1026 0084 07EE901A 		vmov	s15, r1	@ int
 1027 0088 F8EEE77A 		vcvt.f32.s32	s15, s15
 1028 008c 87EE887A 		vdiv.f32	s14, s15, s16
 432:Core/Src/main.c **** 
 1029              		.loc 1 432 76 view .LVU242
 1030 0090 D5ED027A 		vldr.32	s15, [r5, #8]
 432:Core/Src/main.c **** 
 1031              		.loc 1 432 64 view .LVU243
 1032 0094 77EE677A 		vsub.f32	s15, s14, s15
 432:Core/Src/main.c **** 
 1033              		.loc 1 432 16 view .LVU244
 1034 0098 C4ED027A 		vstr.32	s15, [r4, #8]
 434:Core/Src/main.c **** }
 1035              		.loc 1 434 2 is_stmt 1 view .LVU245
 435:Core/Src/main.c **** 
 1036              		.loc 1 435 1 is_stmt 0 view .LVU246
 1037 009c 2046     		mov	r0, r4
 1038 009e 07B0     		add	sp, sp, #28
 1039              	.LCFI28:
 1040              		.cfi_def_cfa_offset 20
 1041              		@ sp needed
 1042 00a0 BDEC028B 		vldm	sp!, {d8}
 1043              	.LCFI29:
 1044              		.cfi_restore 80
 1045              		.cfi_restore 81
 1046              		.cfi_def_cfa_offset 12
 1047              	.LVL75:
 435:Core/Src/main.c **** 
 1048              		.loc 1 435 1 view .LVU247
 1049 00a4 30BD     		pop	{r4, r5, pc}
 1050              	.LVL76:
 1051              	.L45:
 435:Core/Src/main.c **** 
 1052              		.loc 1 435 1 view .LVU248
 1053 00a6 00BF     		.align	2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 35


 1054              	.L44:
 1055 00a8 00000000 		.word	.LANCHOR0
 1056              		.cfi_endproc
 1057              	.LFE144:
 1059              		.section	.text.MPU6050_read_gyro_raw,"ax",%progbits
 1060              		.align	1
 1061              		.global	MPU6050_read_gyro_raw
 1062              		.syntax unified
 1063              		.thumb
 1064              		.thumb_func
 1066              	MPU6050_read_gyro_raw:
 1067              	.LVL77:
 1068              	.LFB145:
 437:Core/Src/main.c **** 	uint8_t data[6];
 1069              		.loc 1 437 101 is_stmt 1 view -0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 8
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 437:Core/Src/main.c **** 	uint8_t data[6];
 1073              		.loc 1 437 101 is_stmt 0 view .LVU250
 1074 0000 10B5     		push	{r4, lr}
 1075              	.LCFI30:
 1076              		.cfi_def_cfa_offset 8
 1077              		.cfi_offset 4, -8
 1078              		.cfi_offset 14, -4
 1079 0002 2DED028B 		vpush.64	{d8}
 1080              	.LCFI31:
 1081              		.cfi_def_cfa_offset 16
 1082              		.cfi_offset 80, -16
 1083              		.cfi_offset 81, -12
 1084 0006 86B0     		sub	sp, sp, #24
 1085              	.LCFI32:
 1086              		.cfi_def_cfa_offset 40
 1087 0008 B0EE408A 		vmov.f32	s16, s0
 1088 000c 1446     		mov	r4, r2
 438:Core/Src/main.c **** 
 1089              		.loc 1 438 2 is_stmt 1 view .LVU251
 441:Core/Src/main.c **** 
 1090              		.loc 1 441 2 view .LVU252
 1091 000e 4FF47A73 		mov	r3, #1000
 1092 0012 0293     		str	r3, [sp, #8]
 1093 0014 0623     		movs	r3, #6
 1094 0016 0193     		str	r3, [sp, #4]
 1095 0018 04AB     		add	r3, sp, #16
 1096 001a 0093     		str	r3, [sp]
 1097 001c 0123     		movs	r3, #1
 1098 001e 0A46     		mov	r2, r1
 1099              	.LVL78:
 441:Core/Src/main.c **** 
 1100              		.loc 1 441 2 is_stmt 0 view .LVU253
 1101 0020 0146     		mov	r1, r0
 1102              	.LVL79:
 441:Core/Src/main.c **** 
 1103              		.loc 1 441 2 view .LVU254
 1104 0022 1A48     		ldr	r0, .L48
 1105              	.LVL80:
 441:Core/Src/main.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 36


 1106              		.loc 1 441 2 view .LVU255
 1107 0024 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1108              	.LVL81:
 443:Core/Src/main.c **** 	gyro_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con;
 1109              		.loc 1 443 2 is_stmt 1 view .LVU256
 443:Core/Src/main.c **** 	gyro_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con;
 1110              		.loc 1 443 32 is_stmt 0 view .LVU257
 1111 0028 9DF81020 		ldrb	r2, [sp, #16]	@ zero_extendqisi2
 443:Core/Src/main.c **** 	gyro_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con;
 1112              		.loc 1 443 47 view .LVU258
 1113 002c 9DF81130 		ldrb	r3, [sp, #17]	@ zero_extendqisi2
 443:Core/Src/main.c **** 	gyro_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con;
 1114              		.loc 1 443 18 view .LVU259
 1115 0030 43EA0223 		orr	r3, r3, r2, lsl #8
 1116 0034 1BB2     		sxth	r3, r3
 443:Core/Src/main.c **** 	gyro_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con;
 1117              		.loc 1 443 52 view .LVU260
 1118 0036 07EE903A 		vmov	s15, r3	@ int
 1119 003a F8EEE77A 		vcvt.f32.s32	s15, s15
 1120 003e 87EE887A 		vdiv.f32	s14, s15, s16
 443:Core/Src/main.c **** 	gyro_corr[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con;
 1121              		.loc 1 443 15 view .LVU261
 1122 0042 84ED007A 		vstr.32	s14, [r4]
 444:Core/Src/main.c **** 	gyro_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con;
 1123              		.loc 1 444 2 is_stmt 1 view .LVU262
 444:Core/Src/main.c **** 	gyro_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con;
 1124              		.loc 1 444 32 is_stmt 0 view .LVU263
 1125 0046 9DF81220 		ldrb	r2, [sp, #18]	@ zero_extendqisi2
 444:Core/Src/main.c **** 	gyro_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con;
 1126              		.loc 1 444 47 view .LVU264
 1127 004a 9DF81330 		ldrb	r3, [sp, #19]	@ zero_extendqisi2
 444:Core/Src/main.c **** 	gyro_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con;
 1128              		.loc 1 444 18 view .LVU265
 1129 004e 43EA0223 		orr	r3, r3, r2, lsl #8
 1130 0052 1BB2     		sxth	r3, r3
 444:Core/Src/main.c **** 	gyro_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con;
 1131              		.loc 1 444 52 view .LVU266
 1132 0054 07EE903A 		vmov	s15, r3	@ int
 1133 0058 F8EEE77A 		vcvt.f32.s32	s15, s15
 1134 005c 87EE887A 		vdiv.f32	s14, s15, s16
 444:Core/Src/main.c **** 	gyro_corr[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con;
 1135              		.loc 1 444 15 view .LVU267
 1136 0060 84ED017A 		vstr.32	s14, [r4, #4]
 445:Core/Src/main.c **** 
 1137              		.loc 1 445 2 is_stmt 1 view .LVU268
 445:Core/Src/main.c **** 
 1138              		.loc 1 445 32 is_stmt 0 view .LVU269
 1139 0064 9DF81420 		ldrb	r2, [sp, #20]	@ zero_extendqisi2
 445:Core/Src/main.c **** 
 1140              		.loc 1 445 47 view .LVU270
 1141 0068 9DF81530 		ldrb	r3, [sp, #21]	@ zero_extendqisi2
 445:Core/Src/main.c **** 
 1142              		.loc 1 445 18 view .LVU271
 1143 006c 43EA0223 		orr	r3, r3, r2, lsl #8
 1144 0070 1BB2     		sxth	r3, r3
 445:Core/Src/main.c **** 
 1145              		.loc 1 445 52 view .LVU272
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 37


 1146 0072 07EE903A 		vmov	s15, r3	@ int
 1147 0076 F8EEE77A 		vcvt.f32.s32	s15, s15
 1148 007a 87EE887A 		vdiv.f32	s14, s15, s16
 445:Core/Src/main.c **** 
 1149              		.loc 1 445 15 view .LVU273
 1150 007e 84ED027A 		vstr.32	s14, [r4, #8]
 447:Core/Src/main.c **** }
 1151              		.loc 1 447 2 is_stmt 1 view .LVU274
 448:Core/Src/main.c **** 
 1152              		.loc 1 448 1 is_stmt 0 view .LVU275
 1153 0082 2046     		mov	r0, r4
 1154 0084 06B0     		add	sp, sp, #24
 1155              	.LCFI33:
 1156              		.cfi_def_cfa_offset 16
 1157              		@ sp needed
 1158 0086 BDEC028B 		vldm	sp!, {d8}
 1159              	.LCFI34:
 1160              		.cfi_restore 80
 1161              		.cfi_restore 81
 1162              		.cfi_def_cfa_offset 8
 1163              	.LVL82:
 448:Core/Src/main.c **** 
 1164              		.loc 1 448 1 view .LVU276
 1165 008a 10BD     		pop	{r4, pc}
 1166              	.LVL83:
 1167              	.L49:
 448:Core/Src/main.c **** 
 1168              		.loc 1 448 1 view .LVU277
 1169              		.align	2
 1170              	.L48:
 1171 008c 00000000 		.word	.LANCHOR0
 1172              		.cfi_endproc
 1173              	.LFE145:
 1175              		.section	.rodata.startup.str1.4,"aMS",%progbits,1
 1176              		.align	2
 1177              	.LC4:
 1178 0000 496E6974 		.ascii	"Initialized\000"
 1178      69616C69 
 1178      7A656400 
 1179              		.section	.text.startup,"ax",%progbits
 1180              		.align	1
 1181              		.global	startup
 1182              		.syntax unified
 1183              		.thumb
 1184              		.thumb_func
 1186              	startup:
 1187              	.LFB134:
 230:Core/Src/main.c **** 	// Initialize everything on startup
 1188              		.loc 1 230 20 is_stmt 1 view -0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 1192 0000 70B5     		push	{r4, r5, r6, lr}
 1193              	.LCFI35:
 1194              		.cfi_def_cfa_offset 16
 1195              		.cfi_offset 4, -16
 1196              		.cfi_offset 5, -12
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 38


 1197              		.cfi_offset 6, -8
 1198              		.cfi_offset 14, -4
 232:Core/Src/main.c **** 	MPU6050_Init();
 1199              		.loc 1 232 2 view .LVU279
 1200 0002 FFF7FEFF 		bl	lcd_init
 1201              	.LVL84:
 233:Core/Src/main.c **** 
 1202              		.loc 1 233 2 view .LVU280
 1203 0006 FFF7FEFF 		bl	MPU6050_Init
 1204              	.LVL85:
 235:Core/Src/main.c **** 	gyro_corr_p  = MPU6050_read_gyro_raw(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_corr);
 1205              		.loc 1 235 2 view .LVU281
 235:Core/Src/main.c **** 	gyro_corr_p  = MPU6050_read_gyro_raw(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_corr);
 1206              		.loc 1 235 17 is_stmt 0 view .LVU282
 1207 000a 124D     		ldr	r5, .L52
 1208 000c 2A46     		mov	r2, r5
 1209 000e 3B21     		movs	r1, #59
 1210 0010 D020     		movs	r0, #208
 1211 0012 9FED110A 		vldr.32	s0, .L52+4
 1212 0016 FFF7FEFF 		bl	MPU6050_read_accel_raw
 1213              	.LVL86:
 235:Core/Src/main.c **** 	gyro_corr_p  = MPU6050_read_gyro_raw(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_corr);
 1214              		.loc 1 235 15 view .LVU283
 1215 001a 104E     		ldr	r6, .L52+8
 1216 001c 3060     		str	r0, [r6]
 236:Core/Src/main.c **** 
 1217              		.loc 1 236 2 is_stmt 1 view .LVU284
 236:Core/Src/main.c **** 
 1218              		.loc 1 236 17 is_stmt 0 view .LVU285
 1219 001e 104C     		ldr	r4, .L52+12
 1220 0020 2246     		mov	r2, r4
 1221 0022 4321     		movs	r1, #67
 1222 0024 D020     		movs	r0, #208
 1223 0026 9FED0F0A 		vldr.32	s0, .L52+16
 1224 002a FFF7FEFF 		bl	MPU6050_read_gyro_raw
 1225              	.LVL87:
 236:Core/Src/main.c **** 
 1226              		.loc 1 236 15 view .LVU286
 1227 002e 0E4B     		ldr	r3, .L52+20
 1228 0030 1860     		str	r0, [r3]
 238:Core/Src/main.c **** 	accel_corr[1] = accel_corr_p[1];
 1229              		.loc 1 238 2 is_stmt 1 view .LVU287
 238:Core/Src/main.c **** 	accel_corr[1] = accel_corr_p[1];
 1230              		.loc 1 238 30 is_stmt 0 view .LVU288
 1231 0032 3368     		ldr	r3, [r6]
 1232 0034 1A68     		ldr	r2, [r3]	@ float
 238:Core/Src/main.c **** 	accel_corr[1] = accel_corr_p[1];
 1233              		.loc 1 238 16 view .LVU289
 1234 0036 2A60     		str	r2, [r5]	@ float
 239:Core/Src/main.c **** 	accel_corr[2] = accel_corr_p[2];
 1235              		.loc 1 239 2 is_stmt 1 view .LVU290
 239:Core/Src/main.c **** 	accel_corr[2] = accel_corr_p[2];
 1236              		.loc 1 239 16 is_stmt 0 view .LVU291
 1237 0038 5A68     		ldr	r2, [r3, #4]	@ float
 1238 003a 6A60     		str	r2, [r5, #4]	@ float
 240:Core/Src/main.c **** 	gyro_corr[0]  = gyro_corr_p[0];
 1239              		.loc 1 240 2 is_stmt 1 view .LVU292
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 39


 240:Core/Src/main.c **** 	gyro_corr[0]  = gyro_corr_p[0];
 1240              		.loc 1 240 16 is_stmt 0 view .LVU293
 1241 003c 9B68     		ldr	r3, [r3, #8]	@ float
 1242 003e AB60     		str	r3, [r5, #8]	@ float
 241:Core/Src/main.c **** 	gyro_corr[1]  = gyro_corr_p[1];
 1243              		.loc 1 241 2 is_stmt 1 view .LVU294
 241:Core/Src/main.c **** 	gyro_corr[1]  = gyro_corr_p[1];
 1244              		.loc 1 241 29 is_stmt 0 view .LVU295
 1245 0040 0368     		ldr	r3, [r0]	@ float
 241:Core/Src/main.c **** 	gyro_corr[1]  = gyro_corr_p[1];
 1246              		.loc 1 241 16 view .LVU296
 1247 0042 2360     		str	r3, [r4]	@ float
 242:Core/Src/main.c **** 	gyro_corr[2]  = gyro_corr_p[2];
 1248              		.loc 1 242 2 is_stmt 1 view .LVU297
 242:Core/Src/main.c **** 	gyro_corr[2]  = gyro_corr_p[2];
 1249              		.loc 1 242 16 is_stmt 0 view .LVU298
 1250 0044 4368     		ldr	r3, [r0, #4]	@ float
 1251 0046 6360     		str	r3, [r4, #4]	@ float
 243:Core/Src/main.c **** 
 1252              		.loc 1 243 2 is_stmt 1 view .LVU299
 243:Core/Src/main.c **** 
 1253              		.loc 1 243 16 is_stmt 0 view .LVU300
 1254 0048 8368     		ldr	r3, [r0, #8]	@ float
 1255 004a A360     		str	r3, [r4, #8]	@ float
 245:Core/Src/main.c **** }
 1256              		.loc 1 245 2 is_stmt 1 view .LVU301
 1257 004c 0748     		ldr	r0, .L52+24
 1258 004e FFF7FEFF 		bl	lcd_send_string
 1259              	.LVL88:
 246:Core/Src/main.c **** 
 1260              		.loc 1 246 1 is_stmt 0 view .LVU302
 1261 0052 70BD     		pop	{r4, r5, r6, pc}
 1262              	.L53:
 1263              		.align	2
 1264              	.L52:
 1265 0054 00000000 		.word	.LANCHOR2
 1266 0058 00008046 		.word	1182793728
 1267 005c 00000000 		.word	.LANCHOR3
 1268 0060 00000000 		.word	.LANCHOR4
 1269 0064 00000343 		.word	1124270080
 1270 0068 00000000 		.word	.LANCHOR5
 1271 006c 00000000 		.word	.LC4
 1272              		.cfi_endproc
 1273              	.LFE134:
 1275              		.section	.rodata.accel_cal.str1.4,"aMS",%progbits,1
 1276              		.align	2
 1277              	.LC5:
 1278 0000 43616C69 		.ascii	"Calibration Complete\000"
 1278      62726174 
 1278      696F6E20 
 1278      436F6D70 
 1278      6C657465 
 1279              		.section	.text.accel_cal,"ax",%progbits
 1280              		.align	1
 1281              		.global	accel_cal
 1282              		.syntax unified
 1283              		.thumb
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 40


 1284              		.thumb_func
 1286              	accel_cal:
 1287              	.LFB137:
 326:Core/Src/main.c **** 	// Calibrate the accelerometer
 1288              		.loc 1 326 22 is_stmt 1 view -0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 0
 1291              		@ frame_needed = 0, uses_anonymous_args = 0
 1292 0000 70B5     		push	{r4, r5, r6, lr}
 1293              	.LCFI36:
 1294              		.cfi_def_cfa_offset 16
 1295              		.cfi_offset 4, -16
 1296              		.cfi_offset 5, -12
 1297              		.cfi_offset 6, -8
 1298              		.cfi_offset 14, -4
 328:Core/Src/main.c **** 
 1299              		.loc 1 328 2 view .LVU304
 328:Core/Src/main.c **** 
 1300              		.loc 1 328 7 is_stmt 0 view .LVU305
 1301 0002 164B     		ldr	r3, .L56
 1302 0004 0022     		movs	r2, #0
 1303 0006 1A70     		strb	r2, [r3]
 330:Core/Src/main.c **** 
 1304              		.loc 1 330 2 is_stmt 1 view .LVU306
 1305 0008 FFF7FEFF 		bl	lcd_clear
 1306              	.LVL89:
 332:Core/Src/main.c **** 	gyro_corr_p  = MPU6050_read_gyro_raw(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_corr);
 1307              		.loc 1 332 2 view .LVU307
 332:Core/Src/main.c **** 	gyro_corr_p  = MPU6050_read_gyro_raw(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_corr);
 1308              		.loc 1 332 17 is_stmt 0 view .LVU308
 1309 000c 144D     		ldr	r5, .L56+4
 1310 000e 2A46     		mov	r2, r5
 1311 0010 3B21     		movs	r1, #59
 1312 0012 D020     		movs	r0, #208
 1313 0014 9FED130A 		vldr.32	s0, .L56+8
 1314 0018 FFF7FEFF 		bl	MPU6050_read_accel_raw
 1315              	.LVL90:
 332:Core/Src/main.c **** 	gyro_corr_p  = MPU6050_read_gyro_raw(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_corr);
 1316              		.loc 1 332 15 view .LVU309
 1317 001c 124E     		ldr	r6, .L56+12
 1318 001e 3060     		str	r0, [r6]
 333:Core/Src/main.c **** 
 1319              		.loc 1 333 2 is_stmt 1 view .LVU310
 333:Core/Src/main.c **** 
 1320              		.loc 1 333 17 is_stmt 0 view .LVU311
 1321 0020 124C     		ldr	r4, .L56+16
 1322 0022 2246     		mov	r2, r4
 1323 0024 4321     		movs	r1, #67
 1324 0026 D020     		movs	r0, #208
 1325 0028 9FED110A 		vldr.32	s0, .L56+20
 1326 002c FFF7FEFF 		bl	MPU6050_read_gyro_raw
 1327              	.LVL91:
 333:Core/Src/main.c **** 
 1328              		.loc 1 333 15 view .LVU312
 1329 0030 104B     		ldr	r3, .L56+24
 1330 0032 1860     		str	r0, [r3]
 335:Core/Src/main.c **** 	accel_corr[1] = accel_corr_p[1];
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 41


 1331              		.loc 1 335 2 is_stmt 1 view .LVU313
 335:Core/Src/main.c **** 	accel_corr[1] = accel_corr_p[1];
 1332              		.loc 1 335 30 is_stmt 0 view .LVU314
 1333 0034 3368     		ldr	r3, [r6]
 1334 0036 1A68     		ldr	r2, [r3]	@ float
 335:Core/Src/main.c **** 	accel_corr[1] = accel_corr_p[1];
 1335              		.loc 1 335 16 view .LVU315
 1336 0038 2A60     		str	r2, [r5]	@ float
 336:Core/Src/main.c **** 	accel_corr[2] = accel_corr_p[2];
 1337              		.loc 1 336 2 is_stmt 1 view .LVU316
 336:Core/Src/main.c **** 	accel_corr[2] = accel_corr_p[2];
 1338              		.loc 1 336 16 is_stmt 0 view .LVU317
 1339 003a 5A68     		ldr	r2, [r3, #4]	@ float
 1340 003c 6A60     		str	r2, [r5, #4]	@ float
 337:Core/Src/main.c **** 	gyro_corr[0]  = gyro_corr_p[0];
 1341              		.loc 1 337 2 is_stmt 1 view .LVU318
 337:Core/Src/main.c **** 	gyro_corr[0]  = gyro_corr_p[0];
 1342              		.loc 1 337 16 is_stmt 0 view .LVU319
 1343 003e 9B68     		ldr	r3, [r3, #8]	@ float
 1344 0040 AB60     		str	r3, [r5, #8]	@ float
 338:Core/Src/main.c **** 	gyro_corr[1]  = gyro_corr_p[1];
 1345              		.loc 1 338 2 is_stmt 1 view .LVU320
 338:Core/Src/main.c **** 	gyro_corr[1]  = gyro_corr_p[1];
 1346              		.loc 1 338 29 is_stmt 0 view .LVU321
 1347 0042 0368     		ldr	r3, [r0]	@ float
 338:Core/Src/main.c **** 	gyro_corr[1]  = gyro_corr_p[1];
 1348              		.loc 1 338 16 view .LVU322
 1349 0044 2360     		str	r3, [r4]	@ float
 339:Core/Src/main.c **** 	gyro_corr[2]  = gyro_corr_p[2];
 1350              		.loc 1 339 2 is_stmt 1 view .LVU323
 339:Core/Src/main.c **** 	gyro_corr[2]  = gyro_corr_p[2];
 1351              		.loc 1 339 16 is_stmt 0 view .LVU324
 1352 0046 4368     		ldr	r3, [r0, #4]	@ float
 1353 0048 6360     		str	r3, [r4, #4]	@ float
 340:Core/Src/main.c **** 
 1354              		.loc 1 340 2 is_stmt 1 view .LVU325
 340:Core/Src/main.c **** 
 1355              		.loc 1 340 16 is_stmt 0 view .LVU326
 1356 004a 8368     		ldr	r3, [r0, #8]	@ float
 1357 004c A360     		str	r3, [r4, #8]	@ float
 342:Core/Src/main.c **** 	lcd_send_string("Calibration Complete");
 1358              		.loc 1 342 2 is_stmt 1 view .LVU327
 1359 004e 8020     		movs	r0, #128
 1360 0050 FFF7FEFF 		bl	lcd_send_cmd
 1361              	.LVL92:
 343:Core/Src/main.c **** }
 1362              		.loc 1 343 2 view .LVU328
 1363 0054 0848     		ldr	r0, .L56+28
 1364 0056 FFF7FEFF 		bl	lcd_send_string
 1365              	.LVL93:
 344:Core/Src/main.c **** 
 1366              		.loc 1 344 1 is_stmt 0 view .LVU329
 1367 005a 70BD     		pop	{r4, r5, r6, pc}
 1368              	.L57:
 1369              		.align	2
 1370              	.L56:
 1371 005c 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 42


 1372 0060 00000000 		.word	.LANCHOR2
 1373 0064 00008046 		.word	1182793728
 1374 0068 00000000 		.word	.LANCHOR3
 1375 006c 00000000 		.word	.LANCHOR4
 1376 0070 00000343 		.word	1124270080
 1377 0074 00000000 		.word	.LANCHOR5
 1378 0078 00000000 		.word	.LC5
 1379              		.cfi_endproc
 1380              	.LFE137:
 1382              		.section	.text.MPU6050_read_gyro,"ax",%progbits
 1383              		.align	1
 1384              		.global	MPU6050_read_gyro
 1385              		.syntax unified
 1386              		.thumb
 1387              		.thumb_func
 1389              	MPU6050_read_gyro:
 1390              	.LVL94:
 1391              	.LFB146:
 450:Core/Src/main.c **** 	uint8_t data[6];
 1392              		.loc 1 450 116 is_stmt 1 view -0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 8
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 450:Core/Src/main.c **** 	uint8_t data[6];
 1396              		.loc 1 450 116 is_stmt 0 view .LVU331
 1397 0000 30B5     		push	{r4, r5, lr}
 1398              	.LCFI37:
 1399              		.cfi_def_cfa_offset 12
 1400              		.cfi_offset 4, -12
 1401              		.cfi_offset 5, -8
 1402              		.cfi_offset 14, -4
 1403 0002 2DED028B 		vpush.64	{d8}
 1404              	.LCFI38:
 1405              		.cfi_def_cfa_offset 20
 1406              		.cfi_offset 80, -20
 1407              		.cfi_offset 81, -16
 1408 0006 87B0     		sub	sp, sp, #28
 1409              	.LCFI39:
 1410              		.cfi_def_cfa_offset 48
 1411 0008 B0EE408A 		vmov.f32	s16, s0
 1412 000c 1446     		mov	r4, r2
 1413 000e 1D46     		mov	r5, r3
 451:Core/Src/main.c **** 
 1414              		.loc 1 451 2 is_stmt 1 view .LVU332
 454:Core/Src/main.c **** 
 1415              		.loc 1 454 2 view .LVU333
 1416 0010 4FF47A73 		mov	r3, #1000
 1417              	.LVL95:
 454:Core/Src/main.c **** 
 1418              		.loc 1 454 2 is_stmt 0 view .LVU334
 1419 0014 0293     		str	r3, [sp, #8]
 1420 0016 0623     		movs	r3, #6
 1421 0018 0193     		str	r3, [sp, #4]
 1422 001a 04AB     		add	r3, sp, #16
 1423 001c 0093     		str	r3, [sp]
 1424 001e 0123     		movs	r3, #1
 1425 0020 0A46     		mov	r2, r1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 43


 1426              	.LVL96:
 454:Core/Src/main.c **** 
 1427              		.loc 1 454 2 view .LVU335
 1428 0022 0146     		mov	r1, r0
 1429              	.LVL97:
 454:Core/Src/main.c **** 
 1430              		.loc 1 454 2 view .LVU336
 1431 0024 2048     		ldr	r0, .L60
 1432              	.LVL98:
 454:Core/Src/main.c **** 
 1433              		.loc 1 454 2 view .LVU337
 1434 0026 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1435              	.LVL99:
 456:Core/Src/main.c **** 	gyro_data[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con - gyro_corr[1];
 1436              		.loc 1 456 2 is_stmt 1 view .LVU338
 456:Core/Src/main.c **** 	gyro_data[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con - gyro_corr[1];
 1437              		.loc 1 456 32 is_stmt 0 view .LVU339
 1438 002a 9DF81020 		ldrb	r2, [sp, #16]	@ zero_extendqisi2
 456:Core/Src/main.c **** 	gyro_data[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con - gyro_corr[1];
 1439              		.loc 1 456 47 view .LVU340
 1440 002e 9DF81130 		ldrb	r3, [sp, #17]	@ zero_extendqisi2
 456:Core/Src/main.c **** 	gyro_data[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con - gyro_corr[1];
 1441              		.loc 1 456 18 view .LVU341
 1442 0032 43EA0223 		orr	r3, r3, r2, lsl #8
 1443 0036 1BB2     		sxth	r3, r3
 456:Core/Src/main.c **** 	gyro_data[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con - gyro_corr[1];
 1444              		.loc 1 456 52 view .LVU342
 1445 0038 07EE903A 		vmov	s15, r3	@ int
 1446 003c F8EEE77A 		vcvt.f32.s32	s15, s15
 1447 0040 87EE887A 		vdiv.f32	s14, s15, s16
 456:Core/Src/main.c **** 	gyro_data[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con - gyro_corr[1];
 1448              		.loc 1 456 73 view .LVU343
 1449 0044 D5ED007A 		vldr.32	s15, [r5]
 456:Core/Src/main.c **** 	gyro_data[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con - gyro_corr[1];
 1450              		.loc 1 456 62 view .LVU344
 1451 0048 77EE677A 		vsub.f32	s15, s14, s15
 456:Core/Src/main.c **** 	gyro_data[1] = ((int16_t)(data[2] << 8 | data[3]))/gyro_con - gyro_corr[1];
 1452              		.loc 1 456 15 view .LVU345
 1453 004c C4ED007A 		vstr.32	s15, [r4]
 457:Core/Src/main.c **** 	gyro_data[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con - gyro_corr[2];
 1454              		.loc 1 457 2 is_stmt 1 view .LVU346
 457:Core/Src/main.c **** 	gyro_data[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con - gyro_corr[2];
 1455              		.loc 1 457 32 is_stmt 0 view .LVU347
 1456 0050 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 457:Core/Src/main.c **** 	gyro_data[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con - gyro_corr[2];
 1457              		.loc 1 457 47 view .LVU348
 1458 0054 9DF81310 		ldrb	r1, [sp, #19]	@ zero_extendqisi2
 457:Core/Src/main.c **** 	gyro_data[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con - gyro_corr[2];
 1459              		.loc 1 457 18 view .LVU349
 1460 0058 41EA0321 		orr	r1, r1, r3, lsl #8
 1461 005c 09B2     		sxth	r1, r1
 457:Core/Src/main.c **** 	gyro_data[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con - gyro_corr[2];
 1462              		.loc 1 457 52 view .LVU350
 1463 005e 07EE901A 		vmov	s15, r1	@ int
 1464 0062 F8EEE77A 		vcvt.f32.s32	s15, s15
 1465 0066 87EE887A 		vdiv.f32	s14, s15, s16
 457:Core/Src/main.c **** 	gyro_data[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con - gyro_corr[2];
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 44


 1466              		.loc 1 457 73 view .LVU351
 1467 006a D5ED017A 		vldr.32	s15, [r5, #4]
 457:Core/Src/main.c **** 	gyro_data[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con - gyro_corr[2];
 1468              		.loc 1 457 62 view .LVU352
 1469 006e 77EE677A 		vsub.f32	s15, s14, s15
 457:Core/Src/main.c **** 	gyro_data[2] = ((int16_t)(data[4] << 8 | data[5]))/gyro_con - gyro_corr[2];
 1470              		.loc 1 457 15 view .LVU353
 1471 0072 C4ED017A 		vstr.32	s15, [r4, #4]
 458:Core/Src/main.c **** 
 1472              		.loc 1 458 2 is_stmt 1 view .LVU354
 458:Core/Src/main.c **** 
 1473              		.loc 1 458 32 is_stmt 0 view .LVU355
 1474 0076 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 458:Core/Src/main.c **** 
 1475              		.loc 1 458 47 view .LVU356
 1476 007a 9DF81510 		ldrb	r1, [sp, #21]	@ zero_extendqisi2
 458:Core/Src/main.c **** 
 1477              		.loc 1 458 18 view .LVU357
 1478 007e 41EA0321 		orr	r1, r1, r3, lsl #8
 1479 0082 09B2     		sxth	r1, r1
 458:Core/Src/main.c **** 
 1480              		.loc 1 458 52 view .LVU358
 1481 0084 07EE901A 		vmov	s15, r1	@ int
 1482 0088 F8EEE77A 		vcvt.f32.s32	s15, s15
 1483 008c 87EE887A 		vdiv.f32	s14, s15, s16
 458:Core/Src/main.c **** 
 1484              		.loc 1 458 73 view .LVU359
 1485 0090 D5ED027A 		vldr.32	s15, [r5, #8]
 458:Core/Src/main.c **** 
 1486              		.loc 1 458 62 view .LVU360
 1487 0094 77EE677A 		vsub.f32	s15, s14, s15
 458:Core/Src/main.c **** 
 1488              		.loc 1 458 15 view .LVU361
 1489 0098 C4ED027A 		vstr.32	s15, [r4, #8]
 460:Core/Src/main.c **** }
 1490              		.loc 1 460 2 is_stmt 1 view .LVU362
 461:Core/Src/main.c **** 
 1491              		.loc 1 461 1 is_stmt 0 view .LVU363
 1492 009c 2046     		mov	r0, r4
 1493 009e 07B0     		add	sp, sp, #28
 1494              	.LCFI40:
 1495              		.cfi_def_cfa_offset 20
 1496              		@ sp needed
 1497 00a0 BDEC028B 		vldm	sp!, {d8}
 1498              	.LCFI41:
 1499              		.cfi_restore 80
 1500              		.cfi_restore 81
 1501              		.cfi_def_cfa_offset 12
 1502              	.LVL100:
 461:Core/Src/main.c **** 
 1503              		.loc 1 461 1 view .LVU364
 1504 00a4 30BD     		pop	{r4, r5, pc}
 1505              	.LVL101:
 1506              	.L61:
 461:Core/Src/main.c **** 
 1507              		.loc 1 461 1 view .LVU365
 1508 00a6 00BF     		.align	2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 45


 1509              	.L60:
 1510 00a8 00000000 		.word	.LANCHOR0
 1511              		.cfi_endproc
 1512              	.LFE146:
 1514              		.section	.rodata.normal.str1.4,"aMS",%progbits,1
 1515              		.align	2
 1516              	.LC6:
 1517 0000 41783D20 		.ascii	"Ax=       \000"
 1517      20202020 
 1517      202000
 1518              		.global	__aeabi_f2d
 1519 000b 00       		.align	2
 1520              	.LC7:
 1521 000c 252E3266 		.ascii	"%.2f\000"
 1521      00
 1522 0011 000000   		.align	2
 1523              	.LC8:
 1524 0014 672000   		.ascii	"g \000"
 1525 0017 00       		.align	2
 1526              	.LC9:
 1527 0018 41793D20 		.ascii	"Ay=       \000"
 1527      20202020 
 1527      202000
 1528 0023 00       		.align	2
 1529              	.LC10:
 1530 0024 417A3D20 		.ascii	"Az=       \000"
 1530      20202020 
 1530      202000
 1531 002f 00       		.align	2
 1532              	.LC11:
 1533 0030 47783D20 		.ascii	"Gx=       \000"
 1533      20202020 
 1533      202000
 1534 003b 00       		.align	2
 1535              	.LC12:
 1536 003c 47793D20 		.ascii	"Gy=       \000"
 1536      20202020 
 1536      202000
 1537 0047 00       		.align	2
 1538              	.LC13:
 1539 0048 477A3D20 		.ascii	"Gz=       \000"
 1539      20202020 
 1539      202000
 1540 0053 00       		.align	2
 1541              	.LC14:
 1542 0054 20202020 		.ascii	"                    \000"
 1542      20202020 
 1542      20202020 
 1542      20202020 
 1542      20202020 
 1543              		.section	.text.normal,"ax",%progbits
 1544              		.align	1
 1545              		.global	normal
 1546              		.syntax unified
 1547              		.thumb
 1548              		.thumb_func
 1550              	normal:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 46


 1551              	.LFB135:
 248:Core/Src/main.c **** 	// Normal run mode
 1552              		.loc 1 248 19 is_stmt 1 view -0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 0
 1555              		@ frame_needed = 0, uses_anonymous_args = 0
 1556 0000 70B5     		push	{r4, r5, r6, lr}
 1557              	.LCFI42:
 1558              		.cfi_def_cfa_offset 16
 1559              		.cfi_offset 4, -16
 1560              		.cfi_offset 5, -12
 1561              		.cfi_offset 6, -8
 1562              		.cfi_offset 14, -4
 250:Core/Src/main.c **** 
 1563              		.loc 1 250 2 view .LVU367
 252:Core/Src/main.c **** 	gyro_data_p  = MPU6050_read_gyro(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_data, gyro_corr);
 1564              		.loc 1 252 2 view .LVU368
 252:Core/Src/main.c **** 	gyro_data_p  = MPU6050_read_gyro(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_data, gyro_corr);
 1565              		.loc 1 252 17 is_stmt 0 view .LVU369
 1566 0002 7F4C     		ldr	r4, .L94
 1567 0004 7F4B     		ldr	r3, .L94+4
 1568 0006 2246     		mov	r2, r4
 1569 0008 3B21     		movs	r1, #59
 1570 000a D020     		movs	r0, #208
 1571 000c 9FED7E0A 		vldr.32	s0, .L94+8
 1572 0010 FFF7FEFF 		bl	MPU6050_read_accel
 1573              	.LVL102:
 252:Core/Src/main.c **** 	gyro_data_p  = MPU6050_read_gyro(GYRO_CONST, MPU6050_ADDR, GYRO_XOUT_H_REG, gyro_data, gyro_corr);
 1574              		.loc 1 252 15 view .LVU370
 1575 0014 7D4E     		ldr	r6, .L94+12
 1576 0016 3060     		str	r0, [r6]
 253:Core/Src/main.c **** 
 1577              		.loc 1 253 2 is_stmt 1 view .LVU371
 253:Core/Src/main.c **** 
 1578              		.loc 1 253 17 is_stmt 0 view .LVU372
 1579 0018 7D4D     		ldr	r5, .L94+16
 1580 001a 7E4B     		ldr	r3, .L94+20
 1581 001c 2A46     		mov	r2, r5
 1582 001e 4321     		movs	r1, #67
 1583 0020 D020     		movs	r0, #208
 1584 0022 9FED7D0A 		vldr.32	s0, .L94+24
 1585 0026 FFF7FEFF 		bl	MPU6050_read_gyro
 1586              	.LVL103:
 253:Core/Src/main.c **** 
 1587              		.loc 1 253 15 view .LVU373
 1588 002a 7C4B     		ldr	r3, .L94+28
 1589 002c 1860     		str	r0, [r3]
 255:Core/Src/main.c **** 	accel_data[1] = accel_data_p[1];
 1590              		.loc 1 255 2 is_stmt 1 view .LVU374
 255:Core/Src/main.c **** 	accel_data[1] = accel_data_p[1];
 1591              		.loc 1 255 30 is_stmt 0 view .LVU375
 1592 002e 3368     		ldr	r3, [r6]
 1593 0030 1A68     		ldr	r2, [r3]	@ float
 255:Core/Src/main.c **** 	accel_data[1] = accel_data_p[1];
 1594              		.loc 1 255 16 view .LVU376
 1595 0032 2260     		str	r2, [r4]	@ float
 256:Core/Src/main.c **** 	accel_data[2] = accel_data_p[2];
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 47


 1596              		.loc 1 256 2 is_stmt 1 view .LVU377
 256:Core/Src/main.c **** 	accel_data[2] = accel_data_p[2];
 1597              		.loc 1 256 16 is_stmt 0 view .LVU378
 1598 0034 5A68     		ldr	r2, [r3, #4]	@ float
 1599 0036 6260     		str	r2, [r4, #4]	@ float
 257:Core/Src/main.c **** 	gyro_data[0]  = gyro_data_p[0];
 1600              		.loc 1 257 2 is_stmt 1 view .LVU379
 257:Core/Src/main.c **** 	gyro_data[0]  = gyro_data_p[0];
 1601              		.loc 1 257 16 is_stmt 0 view .LVU380
 1602 0038 9B68     		ldr	r3, [r3, #8]	@ float
 1603 003a A360     		str	r3, [r4, #8]	@ float
 258:Core/Src/main.c **** 	gyro_data[1]  = gyro_data_p[1];
 1604              		.loc 1 258 2 is_stmt 1 view .LVU381
 258:Core/Src/main.c **** 	gyro_data[1]  = gyro_data_p[1];
 1605              		.loc 1 258 29 is_stmt 0 view .LVU382
 1606 003c 0368     		ldr	r3, [r0]	@ float
 258:Core/Src/main.c **** 	gyro_data[1]  = gyro_data_p[1];
 1607              		.loc 1 258 16 view .LVU383
 1608 003e 2B60     		str	r3, [r5]	@ float
 259:Core/Src/main.c **** 	gyro_data[2]  = gyro_data_p[2];
 1609              		.loc 1 259 2 is_stmt 1 view .LVU384
 259:Core/Src/main.c **** 	gyro_data[2]  = gyro_data_p[2];
 1610              		.loc 1 259 16 is_stmt 0 view .LVU385
 1611 0040 4368     		ldr	r3, [r0, #4]	@ float
 1612 0042 6B60     		str	r3, [r5, #4]	@ float
 260:Core/Src/main.c **** 
 1613              		.loc 1 260 2 is_stmt 1 view .LVU386
 260:Core/Src/main.c **** 
 1614              		.loc 1 260 16 is_stmt 0 view .LVU387
 1615 0044 8368     		ldr	r3, [r0, #8]	@ float
 1616 0046 AB60     		str	r3, [r5, #8]	@ float
 263:Core/Src/main.c **** 	lcd_send_string("Ax=       ");
 1617              		.loc 1 263 2 is_stmt 1 view .LVU388
 1618 0048 8020     		movs	r0, #128
 1619 004a FFF7FEFF 		bl	lcd_send_cmd
 1620              	.LVL104:
 264:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)accel_data[0]);
 1621              		.loc 1 264 2 view .LVU389
 1622 004e 7448     		ldr	r0, .L94+32
 1623 0050 FFF7FEFF 		bl	lcd_send_string
 1624              	.LVL105:
 265:Core/Src/main.c **** 	line_pos = (accel_data[0] >= 0) ? (0x04):(0x03);
 1625              		.loc 1 265 2 view .LVU390
 1626 0054 2068     		ldr	r0, [r4]	@ float
 1627 0056 FFF7FEFF 		bl	__aeabi_f2d
 1628              	.LVL106:
 1629 005a 0246     		mov	r2, r0
 1630 005c 0B46     		mov	r3, r1
 1631 005e 7149     		ldr	r1, .L94+36
 1632 0060 7148     		ldr	r0, .L94+40
 1633 0062 FFF7FEFF 		bl	sprintf
 1634              	.LVL107:
 266:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1635              		.loc 1 266 2 view .LVU391
 266:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1636              		.loc 1 266 24 is_stmt 0 view .LVU392
 1637 0066 D4ED007A 		vldr.32	s15, [r4]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 48


 266:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1638              		.loc 1 266 11 view .LVU393
 1639 006a F5EEC07A 		vcmpe.f32	s15, #0
 1640 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1641 0072 C0F2B980 		blt	.L87
 1642 0076 0420     		movs	r0, #4
 1643              	.L63:
 1644              	.LVL108:
 267:Core/Src/main.c **** 	lcd_send_string(buf);
 1645              		.loc 1 267 2 is_stmt 1 discriminator 4 view .LVU394
 1646 0078 40F08000 		orr	r0, r0, #128
 1647              	.LVL109:
 267:Core/Src/main.c **** 	lcd_send_string(buf);
 1648              		.loc 1 267 2 is_stmt 0 discriminator 4 view .LVU395
 1649 007c FFF7FEFF 		bl	lcd_send_cmd
 1650              	.LVL110:
 268:Core/Src/main.c **** 	lcd_send_string("g ");
 1651              		.loc 1 268 2 is_stmt 1 discriminator 4 view .LVU396
 1652 0080 694D     		ldr	r5, .L94+40
 1653 0082 2846     		mov	r0, r5
 1654 0084 FFF7FEFF 		bl	lcd_send_string
 1655              	.LVL111:
 269:Core/Src/main.c **** 
 1656              		.loc 1 269 2 discriminator 4 view .LVU397
 1657 0088 6848     		ldr	r0, .L94+44
 1658 008a FFF7FEFF 		bl	lcd_send_string
 1659              	.LVL112:
 271:Core/Src/main.c **** 	lcd_send_string("Ay=       ");
 1660              		.loc 1 271 2 discriminator 4 view .LVU398
 1661 008e C020     		movs	r0, #192
 1662 0090 FFF7FEFF 		bl	lcd_send_cmd
 1663              	.LVL113:
 272:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)accel_data[1]);
 1664              		.loc 1 272 2 discriminator 4 view .LVU399
 1665 0094 6648     		ldr	r0, .L94+48
 1666 0096 FFF7FEFF 		bl	lcd_send_string
 1667              	.LVL114:
 273:Core/Src/main.c **** 	line_pos = (accel_data[1] >= 0) ? (0x44):(0x43);
 1668              		.loc 1 273 2 discriminator 4 view .LVU400
 273:Core/Src/main.c **** 	line_pos = (accel_data[1] >= 0) ? (0x44):(0x43);
 1669              		.loc 1 273 41 is_stmt 0 discriminator 4 view .LVU401
 1670 009a 594C     		ldr	r4, .L94
 273:Core/Src/main.c **** 	line_pos = (accel_data[1] >= 0) ? (0x44):(0x43);
 1671              		.loc 1 273 2 discriminator 4 view .LVU402
 1672 009c 6068     		ldr	r0, [r4, #4]	@ float
 1673 009e FFF7FEFF 		bl	__aeabi_f2d
 1674              	.LVL115:
 1675 00a2 0246     		mov	r2, r0
 1676 00a4 0B46     		mov	r3, r1
 1677 00a6 5F49     		ldr	r1, .L94+36
 1678 00a8 2846     		mov	r0, r5
 1679 00aa FFF7FEFF 		bl	sprintf
 1680              	.LVL116:
 274:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1681              		.loc 1 274 2 is_stmt 1 discriminator 4 view .LVU403
 274:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1682              		.loc 1 274 24 is_stmt 0 discriminator 4 view .LVU404
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 49


 1683 00ae D4ED017A 		vldr.32	s15, [r4, #4]
 274:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1684              		.loc 1 274 11 discriminator 4 view .LVU405
 1685 00b2 F5EEC07A 		vcmpe.f32	s15, #0
 1686 00b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1687 00ba C0F29780 		blt	.L88
 274:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1688              		.loc 1 274 11 view .LVU406
 1689 00be 4420     		movs	r0, #68
 1690              	.L65:
 1691              	.LVL117:
 275:Core/Src/main.c **** 	lcd_send_string(buf);
 1692              		.loc 1 275 2 is_stmt 1 discriminator 4 view .LVU407
 1693 00c0 40F08000 		orr	r0, r0, #128
 1694              	.LVL118:
 275:Core/Src/main.c **** 	lcd_send_string(buf);
 1695              		.loc 1 275 2 is_stmt 0 discriminator 4 view .LVU408
 1696 00c4 FFF7FEFF 		bl	lcd_send_cmd
 1697              	.LVL119:
 276:Core/Src/main.c **** 	lcd_send_string("g ");
 1698              		.loc 1 276 2 is_stmt 1 discriminator 4 view .LVU409
 1699 00c8 574D     		ldr	r5, .L94+40
 1700 00ca 2846     		mov	r0, r5
 1701 00cc FFF7FEFF 		bl	lcd_send_string
 1702              	.LVL120:
 277:Core/Src/main.c **** 
 1703              		.loc 1 277 2 discriminator 4 view .LVU410
 1704 00d0 5648     		ldr	r0, .L94+44
 1705 00d2 FFF7FEFF 		bl	lcd_send_string
 1706              	.LVL121:
 279:Core/Src/main.c **** 	lcd_send_string("Az=       ");
 1707              		.loc 1 279 2 discriminator 4 view .LVU411
 1708 00d6 9420     		movs	r0, #148
 1709 00d8 FFF7FEFF 		bl	lcd_send_cmd
 1710              	.LVL122:
 280:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)accel_data[2]);
 1711              		.loc 1 280 2 discriminator 4 view .LVU412
 1712 00dc 5548     		ldr	r0, .L94+52
 1713 00de FFF7FEFF 		bl	lcd_send_string
 1714              	.LVL123:
 281:Core/Src/main.c **** 	line_pos = (accel_data[2] >= 0) ? (0x18):(0x17);
 1715              		.loc 1 281 2 discriminator 4 view .LVU413
 281:Core/Src/main.c **** 	line_pos = (accel_data[2] >= 0) ? (0x18):(0x17);
 1716              		.loc 1 281 41 is_stmt 0 discriminator 4 view .LVU414
 1717 00e2 474C     		ldr	r4, .L94
 281:Core/Src/main.c **** 	line_pos = (accel_data[2] >= 0) ? (0x18):(0x17);
 1718              		.loc 1 281 2 discriminator 4 view .LVU415
 1719 00e4 A068     		ldr	r0, [r4, #8]	@ float
 1720 00e6 FFF7FEFF 		bl	__aeabi_f2d
 1721              	.LVL124:
 1722 00ea 0246     		mov	r2, r0
 1723 00ec 0B46     		mov	r3, r1
 1724 00ee 4D49     		ldr	r1, .L94+36
 1725 00f0 2846     		mov	r0, r5
 1726 00f2 FFF7FEFF 		bl	sprintf
 1727              	.LVL125:
 282:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 50


 1728              		.loc 1 282 2 is_stmt 1 discriminator 4 view .LVU416
 282:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1729              		.loc 1 282 24 is_stmt 0 discriminator 4 view .LVU417
 1730 00f6 D4ED027A 		vldr.32	s15, [r4, #8]
 282:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1731              		.loc 1 282 11 discriminator 4 view .LVU418
 1732 00fa F5EEC07A 		vcmpe.f32	s15, #0
 1733 00fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1734 0102 75DB     		blt	.L89
 282:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1735              		.loc 1 282 11 view .LVU419
 1736 0104 1820     		movs	r0, #24
 1737              	.L67:
 1738              	.LVL126:
 283:Core/Src/main.c **** 	lcd_send_string(buf);
 1739              		.loc 1 283 2 is_stmt 1 discriminator 4 view .LVU420
 1740 0106 40F08000 		orr	r0, r0, #128
 1741              	.LVL127:
 283:Core/Src/main.c **** 	lcd_send_string(buf);
 1742              		.loc 1 283 2 is_stmt 0 discriminator 4 view .LVU421
 1743 010a FFF7FEFF 		bl	lcd_send_cmd
 1744              	.LVL128:
 284:Core/Src/main.c **** 	lcd_send_string("g ");
 1745              		.loc 1 284 2 is_stmt 1 discriminator 4 view .LVU422
 1746 010e 464D     		ldr	r5, .L94+40
 1747 0110 2846     		mov	r0, r5
 1748 0112 FFF7FEFF 		bl	lcd_send_string
 1749              	.LVL129:
 285:Core/Src/main.c **** 
 1750              		.loc 1 285 2 discriminator 4 view .LVU423
 1751 0116 4548     		ldr	r0, .L94+44
 1752 0118 FFF7FEFF 		bl	lcd_send_string
 1753              	.LVL130:
 287:Core/Src/main.c **** 	lcd_send_string("Gx=       ");
 1754              		.loc 1 287 2 discriminator 4 view .LVU424
 1755 011c 8A20     		movs	r0, #138
 1756 011e FFF7FEFF 		bl	lcd_send_cmd
 1757              	.LVL131:
 288:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)gyro_data[0]);
 1758              		.loc 1 288 2 discriminator 4 view .LVU425
 1759 0122 4548     		ldr	r0, .L94+56
 1760 0124 FFF7FEFF 		bl	lcd_send_string
 1761              	.LVL132:
 289:Core/Src/main.c **** 	line_pos = (gyro_data[0] >= 0) ? (0x0E):(0x0D);
 1762              		.loc 1 289 2 discriminator 4 view .LVU426
 289:Core/Src/main.c **** 	line_pos = (gyro_data[0] >= 0) ? (0x0E):(0x0D);
 1763              		.loc 1 289 40 is_stmt 0 discriminator 4 view .LVU427
 1764 0128 394C     		ldr	r4, .L94+16
 289:Core/Src/main.c **** 	line_pos = (gyro_data[0] >= 0) ? (0x0E):(0x0D);
 1765              		.loc 1 289 2 discriminator 4 view .LVU428
 1766 012a 2068     		ldr	r0, [r4]	@ float
 1767 012c FFF7FEFF 		bl	__aeabi_f2d
 1768              	.LVL133:
 1769 0130 0246     		mov	r2, r0
 1770 0132 0B46     		mov	r3, r1
 1771 0134 3B49     		ldr	r1, .L94+36
 1772 0136 2846     		mov	r0, r5
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 51


 1773 0138 FFF7FEFF 		bl	sprintf
 1774              	.LVL134:
 290:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1775              		.loc 1 290 2 is_stmt 1 discriminator 4 view .LVU429
 290:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1776              		.loc 1 290 23 is_stmt 0 discriminator 4 view .LVU430
 1777 013c D4ED007A 		vldr.32	s15, [r4]
 290:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1778              		.loc 1 290 11 discriminator 4 view .LVU431
 1779 0140 F5EEC07A 		vcmpe.f32	s15, #0
 1780 0144 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1781 0148 54DB     		blt	.L90
 290:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1782              		.loc 1 290 11 view .LVU432
 1783 014a 0E20     		movs	r0, #14
 1784              	.L69:
 1785              	.LVL135:
 291:Core/Src/main.c **** 	lcd_send_string(buf);
 1786              		.loc 1 291 2 is_stmt 1 discriminator 4 view .LVU433
 1787 014c 40F08000 		orr	r0, r0, #128
 1788              	.LVL136:
 291:Core/Src/main.c **** 	lcd_send_string(buf);
 1789              		.loc 1 291 2 is_stmt 0 discriminator 4 view .LVU434
 1790 0150 FFF7FEFF 		bl	lcd_send_cmd
 1791              	.LVL137:
 292:Core/Src/main.c **** 
 1792              		.loc 1 292 2 is_stmt 1 discriminator 4 view .LVU435
 1793 0154 344D     		ldr	r5, .L94+40
 1794 0156 2846     		mov	r0, r5
 1795 0158 FFF7FEFF 		bl	lcd_send_string
 1796              	.LVL138:
 294:Core/Src/main.c **** 	lcd_send_string("Gy=       ");
 1797              		.loc 1 294 2 discriminator 4 view .LVU436
 1798 015c CA20     		movs	r0, #202
 1799 015e FFF7FEFF 		bl	lcd_send_cmd
 1800              	.LVL139:
 295:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)gyro_data[1]);
 1801              		.loc 1 295 2 discriminator 4 view .LVU437
 1802 0162 3648     		ldr	r0, .L94+60
 1803 0164 FFF7FEFF 		bl	lcd_send_string
 1804              	.LVL140:
 296:Core/Src/main.c **** 	line_pos = (gyro_data[1] >= 0) ? (0x4E):(0x4D);
 1805              		.loc 1 296 2 discriminator 4 view .LVU438
 296:Core/Src/main.c **** 	line_pos = (gyro_data[1] >= 0) ? (0x4E):(0x4D);
 1806              		.loc 1 296 40 is_stmt 0 discriminator 4 view .LVU439
 1807 0168 294C     		ldr	r4, .L94+16
 296:Core/Src/main.c **** 	line_pos = (gyro_data[1] >= 0) ? (0x4E):(0x4D);
 1808              		.loc 1 296 2 discriminator 4 view .LVU440
 1809 016a 6068     		ldr	r0, [r4, #4]	@ float
 1810 016c FFF7FEFF 		bl	__aeabi_f2d
 1811              	.LVL141:
 1812 0170 0246     		mov	r2, r0
 1813 0172 0B46     		mov	r3, r1
 1814 0174 2B49     		ldr	r1, .L94+36
 1815 0176 2846     		mov	r0, r5
 1816 0178 FFF7FEFF 		bl	sprintf
 1817              	.LVL142:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 52


 297:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1818              		.loc 1 297 2 is_stmt 1 discriminator 4 view .LVU441
 297:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1819              		.loc 1 297 23 is_stmt 0 discriminator 4 view .LVU442
 1820 017c D4ED017A 		vldr.32	s15, [r4, #4]
 297:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1821              		.loc 1 297 11 discriminator 4 view .LVU443
 1822 0180 F5EEC07A 		vcmpe.f32	s15, #0
 1823 0184 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1824 0188 36DB     		blt	.L91
 297:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1825              		.loc 1 297 11 view .LVU444
 1826 018a 4E20     		movs	r0, #78
 1827              	.L71:
 1828              	.LVL143:
 298:Core/Src/main.c **** 	lcd_send_string(buf);
 1829              		.loc 1 298 2 is_stmt 1 discriminator 4 view .LVU445
 1830 018c 40F08000 		orr	r0, r0, #128
 1831              	.LVL144:
 298:Core/Src/main.c **** 	lcd_send_string(buf);
 1832              		.loc 1 298 2 is_stmt 0 discriminator 4 view .LVU446
 1833 0190 FFF7FEFF 		bl	lcd_send_cmd
 1834              	.LVL145:
 299:Core/Src/main.c **** 
 1835              		.loc 1 299 2 is_stmt 1 discriminator 4 view .LVU447
 1836 0194 244D     		ldr	r5, .L94+40
 1837 0196 2846     		mov	r0, r5
 1838 0198 FFF7FEFF 		bl	lcd_send_string
 1839              	.LVL146:
 301:Core/Src/main.c **** 	lcd_send_string("Gz=       ");
 1840              		.loc 1 301 2 discriminator 4 view .LVU448
 1841 019c 9E20     		movs	r0, #158
 1842 019e FFF7FEFF 		bl	lcd_send_cmd
 1843              	.LVL147:
 302:Core/Src/main.c **** 	sprintf(buf, "%.2f", (double)gyro_data[2]);
 1844              		.loc 1 302 2 discriminator 4 view .LVU449
 1845 01a2 2748     		ldr	r0, .L94+64
 1846 01a4 FFF7FEFF 		bl	lcd_send_string
 1847              	.LVL148:
 303:Core/Src/main.c **** 	line_pos = (gyro_data[2] >= 0) ? (0x22):(0x21);
 1848              		.loc 1 303 2 discriminator 4 view .LVU450
 303:Core/Src/main.c **** 	line_pos = (gyro_data[2] >= 0) ? (0x22):(0x21);
 1849              		.loc 1 303 40 is_stmt 0 discriminator 4 view .LVU451
 1850 01a8 194C     		ldr	r4, .L94+16
 303:Core/Src/main.c **** 	line_pos = (gyro_data[2] >= 0) ? (0x22):(0x21);
 1851              		.loc 1 303 2 discriminator 4 view .LVU452
 1852 01aa A068     		ldr	r0, [r4, #8]	@ float
 1853 01ac FFF7FEFF 		bl	__aeabi_f2d
 1854              	.LVL149:
 1855 01b0 0246     		mov	r2, r0
 1856 01b2 0B46     		mov	r3, r1
 1857 01b4 1B49     		ldr	r1, .L94+36
 1858 01b6 2846     		mov	r0, r5
 1859 01b8 FFF7FEFF 		bl	sprintf
 1860              	.LVL150:
 304:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1861              		.loc 1 304 2 is_stmt 1 discriminator 4 view .LVU453
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 53


 304:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1862              		.loc 1 304 23 is_stmt 0 discriminator 4 view .LVU454
 1863 01bc D4ED027A 		vldr.32	s15, [r4, #8]
 304:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1864              		.loc 1 304 11 discriminator 4 view .LVU455
 1865 01c0 F5EEC07A 		vcmpe.f32	s15, #0
 1866 01c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1867 01c8 18DB     		blt	.L92
 304:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1868              		.loc 1 304 11 view .LVU456
 1869 01ca 2220     		movs	r0, #34
 1870              	.L73:
 1871              	.LVL151:
 305:Core/Src/main.c **** 	lcd_send_string(buf);
 1872              		.loc 1 305 2 is_stmt 1 discriminator 4 view .LVU457
 1873 01cc 40F08000 		orr	r0, r0, #128
 1874              	.LVL152:
 305:Core/Src/main.c **** 	lcd_send_string(buf);
 1875              		.loc 1 305 2 is_stmt 0 discriminator 4 view .LVU458
 1876 01d0 FFF7FEFF 		bl	lcd_send_cmd
 1877              	.LVL153:
 306:Core/Src/main.c **** 
 1878              		.loc 1 306 2 is_stmt 1 discriminator 4 view .LVU459
 1879 01d4 1448     		ldr	r0, .L94+40
 1880 01d6 FFF7FEFF 		bl	lcd_send_string
 1881              	.LVL154:
 308:Core/Src/main.c **** 	lcd_send_string("                    ");
 1882              		.loc 1 308 2 discriminator 4 view .LVU460
 1883 01da D420     		movs	r0, #212
 1884 01dc FFF7FEFF 		bl	lcd_send_cmd
 1885              	.LVL155:
 309:Core/Src/main.c **** }
 1886              		.loc 1 309 2 discriminator 4 view .LVU461
 1887 01e0 1848     		ldr	r0, .L94+68
 1888 01e2 FFF7FEFF 		bl	lcd_send_string
 1889              	.LVL156:
 310:Core/Src/main.c **** 
 1890              		.loc 1 310 1 is_stmt 0 discriminator 4 view .LVU462
 1891 01e6 70BD     		pop	{r4, r5, r6, pc}
 1892              	.L87:
 266:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1893              		.loc 1 266 11 view .LVU463
 1894 01e8 0320     		movs	r0, #3
 1895 01ea 45E7     		b	.L63
 1896              	.L88:
 274:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1897              		.loc 1 274 11 view .LVU464
 1898 01ec 4320     		movs	r0, #67
 1899 01ee 67E7     		b	.L65
 1900              	.L89:
 282:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1901              		.loc 1 282 11 view .LVU465
 1902 01f0 1720     		movs	r0, #23
 1903 01f2 88E7     		b	.L67
 1904              	.L90:
 290:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1905              		.loc 1 290 11 view .LVU466
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 54


 1906 01f4 0D20     		movs	r0, #13
 1907 01f6 A9E7     		b	.L69
 1908              	.L91:
 297:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1909              		.loc 1 297 11 view .LVU467
 1910 01f8 4D20     		movs	r0, #77
 1911 01fa C7E7     		b	.L71
 1912              	.L92:
 304:Core/Src/main.c **** 	lcd_send_cmd(0x80|line_pos);
 1913              		.loc 1 304 11 view .LVU468
 1914 01fc 2120     		movs	r0, #33
 1915 01fe E5E7     		b	.L73
 1916              	.L95:
 1917              		.align	2
 1918              	.L94:
 1919 0200 00000000 		.word	.LANCHOR6
 1920 0204 00000000 		.word	.LANCHOR2
 1921 0208 00008046 		.word	1182793728
 1922 020c 00000000 		.word	.LANCHOR7
 1923 0210 00000000 		.word	.LANCHOR8
 1924 0214 00000000 		.word	.LANCHOR4
 1925 0218 00000343 		.word	1124270080
 1926 021c 00000000 		.word	.LANCHOR9
 1927 0220 00000000 		.word	.LC6
 1928 0224 0C000000 		.word	.LC7
 1929 0228 00000000 		.word	.LANCHOR10
 1930 022c 14000000 		.word	.LC8
 1931 0230 18000000 		.word	.LC9
 1932 0234 24000000 		.word	.LC10
 1933 0238 30000000 		.word	.LC11
 1934 023c 3C000000 		.word	.LC12
 1935 0240 48000000 		.word	.LC13
 1936 0244 54000000 		.word	.LC14
 1937              		.cfi_endproc
 1938              	.LFE135:
 1940              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1941              		.align	1
 1942              		.global	HAL_GPIO_EXTI_Callback
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1947              	HAL_GPIO_EXTI_Callback:
 1948              	.LVL157:
 1949              	.LFB147:
 465:Core/Src/main.c **** 	flag = 1;
 1950              		.loc 1 465 48 is_stmt 1 view -0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954              		@ link register save eliminated.
 466:Core/Src/main.c **** }
 1955              		.loc 1 466 2 view .LVU470
 466:Core/Src/main.c **** }
 1956              		.loc 1 466 7 is_stmt 0 view .LVU471
 1957 0000 014B     		ldr	r3, .L97
 1958 0002 0122     		movs	r2, #1
 1959 0004 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 55


 467:Core/Src/main.c **** 
 1960              		.loc 1 467 1 view .LVU472
 1961 0006 7047     		bx	lr
 1962              	.L98:
 1963              		.align	2
 1964              	.L97:
 1965 0008 00000000 		.word	.LANCHOR1
 1966              		.cfi_endproc
 1967              	.LFE147:
 1969              		.section	.text.Error_Handler,"ax",%progbits
 1970              		.align	1
 1971              		.global	Error_Handler
 1972              		.syntax unified
 1973              		.thumb
 1974              		.thumb_func
 1976              	Error_Handler:
 1977              	.LFB154:
 699:Core/Src/main.c **** 
 700:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 701:Core/Src/main.c **** 
 702:Core/Src/main.c **** /* USER CODE END 4 */
 703:Core/Src/main.c **** 
 704:Core/Src/main.c **** /**
 705:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 706:Core/Src/main.c ****   * @retval None
 707:Core/Src/main.c ****   */
 708:Core/Src/main.c **** void Error_Handler(void)
 709:Core/Src/main.c **** {
 1978              		.loc 1 709 1 is_stmt 1 view -0
 1979              		.cfi_startproc
 1980              		@ Volatile: function does not return.
 1981              		@ args = 0, pretend = 0, frame = 0
 1982              		@ frame_needed = 0, uses_anonymous_args = 0
 1983              		@ link register save eliminated.
 710:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 711:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 712:Core/Src/main.c ****   __disable_irq();
 1984              		.loc 1 712 3 view .LVU474
 1985              	.LBB10:
 1986              	.LBI10:
 1987              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 56


  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 57


  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 58


 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1988              		.loc 2 140 27 view .LVU475
 1989              	.LBB11:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1990              		.loc 2 142 3 view .LVU476
 1991              		.syntax unified
 1992              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1993 0000 72B6     		cpsid i
 1994              	@ 0 "" 2
 1995              		.thumb
 1996              		.syntax unified
 1997              	.L100:
 1998              	.LBE11:
 1999              	.LBE10:
 713:Core/Src/main.c ****   while (1)
 2000              		.loc 1 713 3 discriminator 1 view .LVU477
 714:Core/Src/main.c ****   {
 715:Core/Src/main.c ****   }
 2001              		.loc 1 715 3 discriminator 1 view .LVU478
 713:Core/Src/main.c ****   while (1)
 2002              		.loc 1 713 9 discriminator 1 view .LVU479
 2003 0002 FEE7     		b	.L100
 2004              		.cfi_endproc
 2005              	.LFE154:
 2007              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 2008              		.align	1
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2013              	MX_USART2_UART_Init:
 2014              	.LFB151:
 614:Core/Src/main.c **** 
 2015              		.loc 1 614 1 view -0
 2016              		.cfi_startproc
 2017              		@ args = 0, pretend = 0, frame = 0
 2018              		@ frame_needed = 0, uses_anonymous_args = 0
 2019 0000 08B5     		push	{r3, lr}
 2020              	.LCFI43:
 2021              		.cfi_def_cfa_offset 8
 2022              		.cfi_offset 3, -8
 2023              		.cfi_offset 14, -4
 623:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 2024              		.loc 1 623 3 view .LVU481
 623:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 2025              		.loc 1 623 19 is_stmt 0 view .LVU482
 2026 0002 0A48     		ldr	r0, .L105
 2027 0004 0A4B     		ldr	r3, .L105+4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 59


 2028 0006 0360     		str	r3, [r0]
 624:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2029              		.loc 1 624 3 is_stmt 1 view .LVU483
 624:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2030              		.loc 1 624 24 is_stmt 0 view .LVU484
 2031 0008 4FF4E133 		mov	r3, #115200
 2032 000c 4360     		str	r3, [r0, #4]
 625:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2033              		.loc 1 625 3 is_stmt 1 view .LVU485
 625:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2034              		.loc 1 625 26 is_stmt 0 view .LVU486
 2035 000e 0023     		movs	r3, #0
 2036 0010 8360     		str	r3, [r0, #8]
 626:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 2037              		.loc 1 626 3 is_stmt 1 view .LVU487
 626:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 2038              		.loc 1 626 24 is_stmt 0 view .LVU488
 2039 0012 C360     		str	r3, [r0, #12]
 627:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2040              		.loc 1 627 3 is_stmt 1 view .LVU489
 627:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2041              		.loc 1 627 22 is_stmt 0 view .LVU490
 2042 0014 0361     		str	r3, [r0, #16]
 628:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2043              		.loc 1 628 3 is_stmt 1 view .LVU491
 628:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2044              		.loc 1 628 20 is_stmt 0 view .LVU492
 2045 0016 0C22     		movs	r2, #12
 2046 0018 4261     		str	r2, [r0, #20]
 629:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 2047              		.loc 1 629 3 is_stmt 1 view .LVU493
 629:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 2048              		.loc 1 629 25 is_stmt 0 view .LVU494
 2049 001a 8361     		str	r3, [r0, #24]
 630:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 2050              		.loc 1 630 3 is_stmt 1 view .LVU495
 630:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 2051              		.loc 1 630 28 is_stmt 0 view .LVU496
 2052 001c C361     		str	r3, [r0, #28]
 631:Core/Src/main.c ****   {
 2053              		.loc 1 631 3 is_stmt 1 view .LVU497
 631:Core/Src/main.c ****   {
 2054              		.loc 1 631 7 is_stmt 0 view .LVU498
 2055 001e FFF7FEFF 		bl	HAL_UART_Init
 2056              	.LVL158:
 631:Core/Src/main.c ****   {
 2057              		.loc 1 631 6 view .LVU499
 2058 0022 00B9     		cbnz	r0, .L104
 639:Core/Src/main.c **** 
 2059              		.loc 1 639 1 view .LVU500
 2060 0024 08BD     		pop	{r3, pc}
 2061              	.L104:
 633:Core/Src/main.c ****   }
 2062              		.loc 1 633 5 is_stmt 1 view .LVU501
 2063 0026 FFF7FEFF 		bl	Error_Handler
 2064              	.LVL159:
 2065              	.L106:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 60


 2066 002a 00BF     		.align	2
 2067              	.L105:
 2068 002c 00000000 		.word	.LANCHOR11
 2069 0030 00440040 		.word	1073759232
 2070              		.cfi_endproc
 2071              	.LFE151:
 2073              		.section	.text.MX_I2C1_Init,"ax",%progbits
 2074              		.align	1
 2075              		.syntax unified
 2076              		.thumb
 2077              		.thumb_func
 2079              	MX_I2C1_Init:
 2080              	.LFB150:
 580:Core/Src/main.c **** 
 2081              		.loc 1 580 1 view -0
 2082              		.cfi_startproc
 2083              		@ args = 0, pretend = 0, frame = 0
 2084              		@ frame_needed = 0, uses_anonymous_args = 0
 2085 0000 08B5     		push	{r3, lr}
 2086              	.LCFI44:
 2087              		.cfi_def_cfa_offset 8
 2088              		.cfi_offset 3, -8
 2089              		.cfi_offset 14, -4
 589:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 2090              		.loc 1 589 3 view .LVU503
 589:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 2091              		.loc 1 589 18 is_stmt 0 view .LVU504
 2092 0002 0A48     		ldr	r0, .L111
 2093 0004 0A4B     		ldr	r3, .L111+4
 2094 0006 0360     		str	r3, [r0]
 590:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 2095              		.loc 1 590 3 is_stmt 1 view .LVU505
 590:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 2096              		.loc 1 590 25 is_stmt 0 view .LVU506
 2097 0008 0A4B     		ldr	r3, .L111+8
 2098 000a 4360     		str	r3, [r0, #4]
 591:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 2099              		.loc 1 591 3 is_stmt 1 view .LVU507
 591:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 2100              		.loc 1 591 24 is_stmt 0 view .LVU508
 2101 000c 0023     		movs	r3, #0
 2102 000e 8360     		str	r3, [r0, #8]
 592:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 2103              		.loc 1 592 3 is_stmt 1 view .LVU509
 592:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 2104              		.loc 1 592 26 is_stmt 0 view .LVU510
 2105 0010 C360     		str	r3, [r0, #12]
 593:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 2106              		.loc 1 593 3 is_stmt 1 view .LVU511
 593:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 2107              		.loc 1 593 29 is_stmt 0 view .LVU512
 2108 0012 4FF48042 		mov	r2, #16384
 2109 0016 0261     		str	r2, [r0, #16]
 594:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 2110              		.loc 1 594 3 is_stmt 1 view .LVU513
 594:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 2111              		.loc 1 594 30 is_stmt 0 view .LVU514
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 61


 2112 0018 4361     		str	r3, [r0, #20]
 595:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 2113              		.loc 1 595 3 is_stmt 1 view .LVU515
 595:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 2114              		.loc 1 595 26 is_stmt 0 view .LVU516
 2115 001a 8361     		str	r3, [r0, #24]
 596:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 2116              		.loc 1 596 3 is_stmt 1 view .LVU517
 596:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 2117              		.loc 1 596 30 is_stmt 0 view .LVU518
 2118 001c C361     		str	r3, [r0, #28]
 597:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 2119              		.loc 1 597 3 is_stmt 1 view .LVU519
 597:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 2120              		.loc 1 597 28 is_stmt 0 view .LVU520
 2121 001e 0362     		str	r3, [r0, #32]
 598:Core/Src/main.c ****   {
 2122              		.loc 1 598 3 is_stmt 1 view .LVU521
 598:Core/Src/main.c ****   {
 2123              		.loc 1 598 7 is_stmt 0 view .LVU522
 2124 0020 FFF7FEFF 		bl	HAL_I2C_Init
 2125              	.LVL160:
 598:Core/Src/main.c ****   {
 2126              		.loc 1 598 6 view .LVU523
 2127 0024 00B9     		cbnz	r0, .L110
 606:Core/Src/main.c **** 
 2128              		.loc 1 606 1 view .LVU524
 2129 0026 08BD     		pop	{r3, pc}
 2130              	.L110:
 600:Core/Src/main.c ****   }
 2131              		.loc 1 600 5 is_stmt 1 view .LVU525
 2132 0028 FFF7FEFF 		bl	Error_Handler
 2133              	.LVL161:
 2134              	.L112:
 2135              		.align	2
 2136              	.L111:
 2137 002c 00000000 		.word	.LANCHOR0
 2138 0030 00540040 		.word	1073763328
 2139 0034 A0860100 		.word	100000
 2140              		.cfi_endproc
 2141              	.LFE150:
 2143              		.section	.text.SystemClock_Config,"ax",%progbits
 2144              		.align	1
 2145              		.global	SystemClock_Config
 2146              		.syntax unified
 2147              		.thumb
 2148              		.thumb_func
 2150              	SystemClock_Config:
 2151              	.LFB149:
 535:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2152              		.loc 1 535 1 view -0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 80
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156 0000 00B5     		push	{lr}
 2157              	.LCFI45:
 2158              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 62


 2159              		.cfi_offset 14, -4
 2160 0002 95B0     		sub	sp, sp, #84
 2161              	.LCFI46:
 2162              		.cfi_def_cfa_offset 88
 536:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2163              		.loc 1 536 3 view .LVU527
 536:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2164              		.loc 1 536 22 is_stmt 0 view .LVU528
 2165 0004 3022     		movs	r2, #48
 2166 0006 0021     		movs	r1, #0
 2167 0008 08A8     		add	r0, sp, #32
 2168 000a FFF7FEFF 		bl	memset
 2169              	.LVL162:
 537:Core/Src/main.c **** 
 2170              		.loc 1 537 3 is_stmt 1 view .LVU529
 537:Core/Src/main.c **** 
 2171              		.loc 1 537 22 is_stmt 0 view .LVU530
 2172 000e 0023     		movs	r3, #0
 2173 0010 0393     		str	r3, [sp, #12]
 2174 0012 0493     		str	r3, [sp, #16]
 2175 0014 0593     		str	r3, [sp, #20]
 2176 0016 0693     		str	r3, [sp, #24]
 2177 0018 0793     		str	r3, [sp, #28]
 541:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2178              		.loc 1 541 3 is_stmt 1 view .LVU531
 2179              	.LBB12:
 541:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2180              		.loc 1 541 3 view .LVU532
 2181 001a 0193     		str	r3, [sp, #4]
 541:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2182              		.loc 1 541 3 view .LVU533
 2183 001c 1E4A     		ldr	r2, .L119
 2184 001e 116C     		ldr	r1, [r2, #64]
 2185 0020 41F08051 		orr	r1, r1, #268435456
 2186 0024 1164     		str	r1, [r2, #64]
 541:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2187              		.loc 1 541 3 view .LVU534
 2188 0026 126C     		ldr	r2, [r2, #64]
 2189 0028 02F08052 		and	r2, r2, #268435456
 2190 002c 0192     		str	r2, [sp, #4]
 541:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2191              		.loc 1 541 3 view .LVU535
 2192 002e 019A     		ldr	r2, [sp, #4]
 2193              	.LBE12:
 541:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 2194              		.loc 1 541 3 view .LVU536
 542:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 2195              		.loc 1 542 3 view .LVU537
 2196              	.LBB13:
 542:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 2197              		.loc 1 542 3 view .LVU538
 2198 0030 0293     		str	r3, [sp, #8]
 542:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 2199              		.loc 1 542 3 view .LVU539
 2200 0032 1A4A     		ldr	r2, .L119+4
 2201 0034 1168     		ldr	r1, [r2]
 2202 0036 41F44041 		orr	r1, r1, #49152
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 63


 2203 003a 1160     		str	r1, [r2]
 542:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 2204              		.loc 1 542 3 view .LVU540
 2205 003c 1268     		ldr	r2, [r2]
 2206 003e 02F44042 		and	r2, r2, #49152
 2207 0042 0292     		str	r2, [sp, #8]
 542:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 2208              		.loc 1 542 3 view .LVU541
 2209 0044 029A     		ldr	r2, [sp, #8]
 2210              	.LBE13:
 542:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 2211              		.loc 1 542 3 view .LVU542
 546:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2212              		.loc 1 546 3 view .LVU543
 546:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2213              		.loc 1 546 36 is_stmt 0 view .LVU544
 2214 0046 0221     		movs	r1, #2
 2215 0048 0891     		str	r1, [sp, #32]
 547:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2216              		.loc 1 547 3 is_stmt 1 view .LVU545
 547:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2217              		.loc 1 547 30 is_stmt 0 view .LVU546
 2218 004a 0122     		movs	r2, #1
 2219 004c 0B92     		str	r2, [sp, #44]
 548:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2220              		.loc 1 548 3 is_stmt 1 view .LVU547
 548:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2221              		.loc 1 548 41 is_stmt 0 view .LVU548
 2222 004e 1022     		movs	r2, #16
 2223 0050 0C92     		str	r2, [sp, #48]
 549:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2224              		.loc 1 549 3 is_stmt 1 view .LVU549
 549:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2225              		.loc 1 549 34 is_stmt 0 view .LVU550
 2226 0052 0E91     		str	r1, [sp, #56]
 550:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 2227              		.loc 1 550 3 is_stmt 1 view .LVU551
 550:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 2228              		.loc 1 550 35 is_stmt 0 view .LVU552
 2229 0054 0F93     		str	r3, [sp, #60]
 551:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 2230              		.loc 1 551 3 is_stmt 1 view .LVU553
 551:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 2231              		.loc 1 551 30 is_stmt 0 view .LVU554
 2232 0056 1092     		str	r2, [sp, #64]
 552:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 2233              		.loc 1 552 3 is_stmt 1 view .LVU555
 552:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 2234              		.loc 1 552 30 is_stmt 0 view .LVU556
 2235 0058 4FF4A873 		mov	r3, #336
 2236 005c 1193     		str	r3, [sp, #68]
 553:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 2237              		.loc 1 553 3 is_stmt 1 view .LVU557
 553:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 2238              		.loc 1 553 30 is_stmt 0 view .LVU558
 2239 005e 0423     		movs	r3, #4
 2240 0060 1293     		str	r3, [sp, #72]
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 64


 554:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2241              		.loc 1 554 3 is_stmt 1 view .LVU559
 554:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2242              		.loc 1 554 30 is_stmt 0 view .LVU560
 2243 0062 1393     		str	r3, [sp, #76]
 555:Core/Src/main.c ****   {
 2244              		.loc 1 555 3 is_stmt 1 view .LVU561
 555:Core/Src/main.c ****   {
 2245              		.loc 1 555 7 is_stmt 0 view .LVU562
 2246 0064 08A8     		add	r0, sp, #32
 2247 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2248              	.LVL163:
 555:Core/Src/main.c ****   {
 2249              		.loc 1 555 6 view .LVU563
 2250 006a 80B9     		cbnz	r0, .L117
 561:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2251              		.loc 1 561 3 is_stmt 1 view .LVU564
 561:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2252              		.loc 1 561 31 is_stmt 0 view .LVU565
 2253 006c 0F23     		movs	r3, #15
 2254 006e 0393     		str	r3, [sp, #12]
 563:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2255              		.loc 1 563 3 is_stmt 1 view .LVU566
 563:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2256              		.loc 1 563 34 is_stmt 0 view .LVU567
 2257 0070 0221     		movs	r1, #2
 2258 0072 0491     		str	r1, [sp, #16]
 564:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2259              		.loc 1 564 3 is_stmt 1 view .LVU568
 564:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2260              		.loc 1 564 35 is_stmt 0 view .LVU569
 2261 0074 0023     		movs	r3, #0
 2262 0076 0593     		str	r3, [sp, #20]
 565:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2263              		.loc 1 565 3 is_stmt 1 view .LVU570
 565:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2264              		.loc 1 565 36 is_stmt 0 view .LVU571
 2265 0078 4FF48052 		mov	r2, #4096
 2266 007c 0692     		str	r2, [sp, #24]
 566:Core/Src/main.c **** 
 2267              		.loc 1 566 3 is_stmt 1 view .LVU572
 566:Core/Src/main.c **** 
 2268              		.loc 1 566 36 is_stmt 0 view .LVU573
 2269 007e 0793     		str	r3, [sp, #28]
 568:Core/Src/main.c ****   {
 2270              		.loc 1 568 3 is_stmt 1 view .LVU574
 568:Core/Src/main.c ****   {
 2271              		.loc 1 568 7 is_stmt 0 view .LVU575
 2272 0080 03A8     		add	r0, sp, #12
 2273 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2274              	.LVL164:
 568:Core/Src/main.c ****   {
 2275              		.loc 1 568 6 view .LVU576
 2276 0086 20B9     		cbnz	r0, .L118
 572:Core/Src/main.c **** 
 2277              		.loc 1 572 1 view .LVU577
 2278 0088 15B0     		add	sp, sp, #84
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 65


 2279              	.LCFI47:
 2280              		.cfi_remember_state
 2281              		.cfi_def_cfa_offset 4
 2282              		@ sp needed
 2283 008a 5DF804FB 		ldr	pc, [sp], #4
 2284              	.L117:
 2285              	.LCFI48:
 2286              		.cfi_restore_state
 557:Core/Src/main.c ****   }
 2287              		.loc 1 557 5 is_stmt 1 view .LVU578
 2288 008e FFF7FEFF 		bl	Error_Handler
 2289              	.LVL165:
 2290              	.L118:
 570:Core/Src/main.c ****   }
 2291              		.loc 1 570 5 view .LVU579
 2292 0092 FFF7FEFF 		bl	Error_Handler
 2293              	.LVL166:
 2294              	.L120:
 2295 0096 00BF     		.align	2
 2296              	.L119:
 2297 0098 00380240 		.word	1073887232
 2298 009c 00700040 		.word	1073770496
 2299              		.cfi_endproc
 2300              	.LFE149:
 2302              		.section	.text.main,"ax",%progbits
 2303              		.align	1
 2304              		.global	main
 2305              		.syntax unified
 2306              		.thumb
 2307              		.thumb_func
 2309              	main:
 2310              	.LFB148:
 477:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 2311              		.loc 1 477 1 view -0
 2312              		.cfi_startproc
 2313              		@ Volatile: function does not return.
 2314              		@ args = 0, pretend = 0, frame = 0
 2315              		@ frame_needed = 0, uses_anonymous_args = 0
 2316 0000 08B5     		push	{r3, lr}
 2317              	.LCFI49:
 2318              		.cfi_def_cfa_offset 8
 2319              		.cfi_offset 3, -8
 2320              		.cfi_offset 14, -4
 480:Core/Src/main.c **** 
 2321              		.loc 1 480 2 view .LVU581
 480:Core/Src/main.c **** 
 2322              		.loc 1 480 8 is_stmt 0 view .LVU582
 2323 0002 124B     		ldr	r3, .L124
 2324 0004 0022     		movs	r2, #0
 2325 0006 1A60     		str	r2, [r3]
 487:Core/Src/main.c **** 
 2326              		.loc 1 487 3 is_stmt 1 view .LVU583
 2327 0008 FFF7FEFF 		bl	HAL_Init
 2328              	.LVL167:
 497:Core/Src/main.c **** 
 2329              		.loc 1 497 3 view .LVU584
 2330 000c FFF7FEFF 		bl	SystemClock_Config
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 66


 2331              	.LVL168:
 504:Core/Src/main.c ****   MX_DMA_Init();
 2332              		.loc 1 504 3 view .LVU585
 2333 0010 FFF7FEFF 		bl	MX_GPIO_Init
 2334              	.LVL169:
 505:Core/Src/main.c ****   MX_USART2_UART_Init();
 2335              		.loc 1 505 3 view .LVU586
 2336 0014 FFF7FEFF 		bl	MX_DMA_Init
 2337              	.LVL170:
 506:Core/Src/main.c ****   MX_I2C1_Init();
 2338              		.loc 1 506 3 view .LVU587
 2339 0018 FFF7FEFF 		bl	MX_USART2_UART_Init
 2340              	.LVL171:
 507:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2341              		.loc 1 507 3 view .LVU588
 2342 001c FFF7FEFF 		bl	MX_I2C1_Init
 2343              	.LVL172:
 2344              	.L122:
 516:Core/Src/main.c ****   {
 2345              		.loc 1 516 3 discriminator 1 view .LVU589
 522:Core/Src/main.c **** 	  HAL_Delay(FSM[state].time_delay);
 2346              		.loc 1 522 4 discriminator 1 view .LVU590
 522:Core/Src/main.c **** 	  HAL_Delay(FSM[state].time_delay);
 2347              		.loc 1 522 15 is_stmt 0 discriminator 1 view .LVU591
 2348 0020 0B4D     		ldr	r5, .L124+4
 2349 0022 0A4C     		ldr	r4, .L124
 2350 0024 2368     		ldr	r3, [r4]
 2351 0026 1B01     		lsls	r3, r3, #4
 2352 0028 EB58     		ldr	r3, [r5, r3]
 2353 002a 9847     		blx	r3
 2354              	.LVL173:
 523:Core/Src/main.c **** 	  state = FSM[state].next_state[flag];
 2355              		.loc 1 523 4 is_stmt 1 discriminator 1 view .LVU592
 2356 002c 2368     		ldr	r3, [r4]
 2357 002e 05EB0313 		add	r3, r5, r3, lsl #4
 2358 0032 5868     		ldr	r0, [r3, #4]
 2359 0034 FFF7FEFF 		bl	HAL_Delay
 2360              	.LVL174:
 524:Core/Src/main.c **** 
 2361              		.loc 1 524 4 discriminator 1 view .LVU593
 524:Core/Src/main.c **** 
 2362              		.loc 1 524 33 is_stmt 0 discriminator 1 view .LVU594
 2363 0038 2268     		ldr	r2, [r4]
 2364 003a 064B     		ldr	r3, .L124+8
 2365 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2366 003e 03EB8203 		add	r3, r3, r2, lsl #2
 2367 0042 0233     		adds	r3, r3, #2
 2368 0044 55F82330 		ldr	r3, [r5, r3, lsl #2]
 524:Core/Src/main.c **** 
 2369              		.loc 1 524 10 discriminator 1 view .LVU595
 2370 0048 2360     		str	r3, [r4]
 516:Core/Src/main.c ****   {
 2371              		.loc 1 516 9 is_stmt 1 discriminator 1 view .LVU596
 2372 004a E9E7     		b	.L122
 2373              	.L125:
 2374              		.align	2
 2375              	.L124:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 67


 2376 004c 00000000 		.word	.LANCHOR12
 2377 0050 00000000 		.word	.LANCHOR13
 2378 0054 00000000 		.word	.LANCHOR1
 2379              		.cfi_endproc
 2380              	.LFE148:
 2382              		.global	buf
 2383              		.global	gyro_corr_p
 2384              		.global	gyro_corr
 2385              		.global	gyro_data_p
 2386              		.global	gyro_data
 2387              		.global	accel_corr_p
 2388              		.global	accel_corr
 2389              		.global	accel_data_p
 2390              		.global	accel_data
 2391              		.global	input
 2392              		.global	state
 2393              		.global	flag
 2394              		.global	FSM
 2395              		.global	hdma_usart2_tx
 2396              		.global	huart2
 2397              		.global	hi2c1
 2398              		.section	.bss.accel_corr,"aw",%nobits
 2399              		.align	2
 2400              		.set	.LANCHOR2,. + 0
 2403              	accel_corr:
 2404 0000 00000000 		.space	12
 2404      00000000 
 2404      00000000 
 2405              		.section	.bss.accel_corr_p,"aw",%nobits
 2406              		.align	2
 2407              		.set	.LANCHOR3,. + 0
 2410              	accel_corr_p:
 2411 0000 00000000 		.space	4
 2412              		.section	.bss.accel_data,"aw",%nobits
 2413              		.align	2
 2414              		.set	.LANCHOR6,. + 0
 2417              	accel_data:
 2418 0000 00000000 		.space	12
 2418      00000000 
 2418      00000000 
 2419              		.section	.bss.accel_data_p,"aw",%nobits
 2420              		.align	2
 2421              		.set	.LANCHOR7,. + 0
 2424              	accel_data_p:
 2425 0000 00000000 		.space	4
 2426              		.section	.bss.buf,"aw",%nobits
 2427              		.align	2
 2428              		.set	.LANCHOR10,. + 0
 2431              	buf:
 2432 0000 00000000 		.space	5
 2432      00
 2433              		.section	.bss.flag,"aw",%nobits
 2434              		.set	.LANCHOR1,. + 0
 2437              	flag:
 2438 0000 00       		.space	1
 2439              		.section	.bss.gyro_corr,"aw",%nobits
 2440              		.align	2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 68


 2441              		.set	.LANCHOR4,. + 0
 2444              	gyro_corr:
 2445 0000 00000000 		.space	12
 2445      00000000 
 2445      00000000 
 2446              		.section	.bss.gyro_corr_p,"aw",%nobits
 2447              		.align	2
 2448              		.set	.LANCHOR5,. + 0
 2451              	gyro_corr_p:
 2452 0000 00000000 		.space	4
 2453              		.section	.bss.gyro_data,"aw",%nobits
 2454              		.align	2
 2455              		.set	.LANCHOR8,. + 0
 2458              	gyro_data:
 2459 0000 00000000 		.space	12
 2459      00000000 
 2459      00000000 
 2460              		.section	.bss.gyro_data_p,"aw",%nobits
 2461              		.align	2
 2462              		.set	.LANCHOR9,. + 0
 2465              	gyro_data_p:
 2466 0000 00000000 		.space	4
 2467              		.section	.bss.hdma_usart2_tx,"aw",%nobits
 2468              		.align	2
 2471              	hdma_usart2_tx:
 2472 0000 00000000 		.space	96
 2472      00000000 
 2472      00000000 
 2472      00000000 
 2472      00000000 
 2473              		.section	.bss.hi2c1,"aw",%nobits
 2474              		.align	2
 2475              		.set	.LANCHOR0,. + 0
 2478              	hi2c1:
 2479 0000 00000000 		.space	84
 2479      00000000 
 2479      00000000 
 2479      00000000 
 2479      00000000 
 2480              		.section	.bss.huart2,"aw",%nobits
 2481              		.align	2
 2482              		.set	.LANCHOR11,. + 0
 2485              	huart2:
 2486 0000 00000000 		.space	68
 2486      00000000 
 2486      00000000 
 2486      00000000 
 2486      00000000 
 2487              		.section	.bss.input,"aw",%nobits
 2488              		.align	2
 2491              	input:
 2492 0000 00000000 		.space	4
 2493              		.section	.bss.state,"aw",%nobits
 2494              		.align	2
 2495              		.set	.LANCHOR12,. + 0
 2498              	state:
 2499 0000 00000000 		.space	4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 69


 2500              		.section	.rodata.FSM,"a"
 2501              		.align	2
 2502              		.set	.LANCHOR13,. + 0
 2505              	FSM:
 2506 0000 00000000 		.word	startup
 2507 0004 B80B0000 		.word	3000
 2508 0008 01000000 		.word	1
 2509 000c 01000000 		.word	1
 2510 0010 00000000 		.word	normal
 2511 0014 F4010000 		.word	500
 2512 0018 01000000 		.word	1
 2513 001c 02000000 		.word	2
 2514 0020 00000000 		.word	accel_cal_prep
 2515 0024 E8030000 		.word	1000
 2516 0028 02000000 		.word	2
 2517 002c 03000000 		.word	3
 2518 0030 00000000 		.word	accel_cal
 2519 0034 D0070000 		.word	2000
 2520 0038 01000000 		.word	1
 2521 003c 01000000 		.word	1
 2522              		.text
 2523              	.Letext0:
 2524              		.file 3 "c:\\dev_tools\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-
 2525              		.file 4 "c:\\dev_tools\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-
 2526              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2527              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2528              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2529              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2530              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2531              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2532              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2533              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2534              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2535              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2536              		.file 15 "c:\\dev_tools\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm
 2537              		.file 16 "<built-in>"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 70


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:193    .text.MX_GPIO_Init:000000c4 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:200    .text.MX_DMA_Init:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:205    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:254    .text.MX_DMA_Init:00000030 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:259    .text.lcd_send_cmd:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:265    .text.lcd_send_cmd:00000000 lcd_send_cmd
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:331    .text.lcd_send_cmd:00000044 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:336    .text.lcd_send_data:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:342    .text.lcd_send_data:00000000 lcd_send_data
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:408    .text.lcd_send_data:00000044 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:413    .text.lcd_clear:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:419    .text.lcd_clear:00000000 lcd_clear
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:464    .text.lcd_init:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:470    .text.lcd_init:00000000 lcd_init
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:559    .text.lcd_send_string:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:565    .text.lcd_send_string:00000000 lcd_send_string
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:605    .rodata.MPU6050_Init.str1.4:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:609    .text.MPU6050_Init:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:615    .text.MPU6050_Init:00000000 MPU6050_Init
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:734    .text.MPU6050_Init:000000a8 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:740    .rodata.accel_cal_prep.str1.4:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:750    .text.accel_cal_prep:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:756    .text.accel_cal_prep:00000000 accel_cal_prep
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:804    .text.accel_cal_prep:00000034 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:812    .text.MPU6050_read_accel_raw:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:818    .text.MPU6050_read_accel_raw:00000000 MPU6050_read_accel_raw
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:923    .text.MPU6050_read_accel_raw:0000008c $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:928    .text.MPU6050_read_accel:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:934    .text.MPU6050_read_accel:00000000 MPU6050_read_accel
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1055   .text.MPU6050_read_accel:000000a8 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1060   .text.MPU6050_read_gyro_raw:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1066   .text.MPU6050_read_gyro_raw:00000000 MPU6050_read_gyro_raw
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1171   .text.MPU6050_read_gyro_raw:0000008c $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1176   .rodata.startup.str1.4:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1180   .text.startup:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1186   .text.startup:00000000 startup
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1265   .text.startup:00000054 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1276   .rodata.accel_cal.str1.4:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1280   .text.accel_cal:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1286   .text.accel_cal:00000000 accel_cal
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1371   .text.accel_cal:0000005c $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1383   .text.MPU6050_read_gyro:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1389   .text.MPU6050_read_gyro:00000000 MPU6050_read_gyro
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1510   .text.MPU6050_read_gyro:000000a8 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1515   .rodata.normal.str1.4:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1544   .text.normal:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1550   .text.normal:00000000 normal
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1919   .text.normal:00000200 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1941   .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1947   .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1965   .text.HAL_GPIO_EXTI_Callback:00000008 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1970   .text.Error_Handler:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:1976   .text.Error_Handler:00000000 Error_Handler
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 71


C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2008   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2013   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2068   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2074   .text.MX_I2C1_Init:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2079   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2137   .text.MX_I2C1_Init:0000002c $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2144   .text.SystemClock_Config:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2150   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2297   .text.SystemClock_Config:00000098 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2303   .text.main:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2309   .text.main:00000000 main
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2376   .text.main:0000004c $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2431   .bss.buf:00000000 buf
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2451   .bss.gyro_corr_p:00000000 gyro_corr_p
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2444   .bss.gyro_corr:00000000 gyro_corr
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2465   .bss.gyro_data_p:00000000 gyro_data_p
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2458   .bss.gyro_data:00000000 gyro_data
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2410   .bss.accel_corr_p:00000000 accel_corr_p
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2403   .bss.accel_corr:00000000 accel_corr
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2424   .bss.accel_data_p:00000000 accel_data_p
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2417   .bss.accel_data:00000000 accel_data
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2491   .bss.input:00000000 input
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2498   .bss.state:00000000 state
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2437   .bss.flag:00000000 flag
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2505   .rodata.FSM:00000000 FSM
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2471   .bss.hdma_usart2_tx:00000000 hdma_usart2_tx
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2485   .bss.huart2:00000000 huart2
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2478   .bss.hi2c1:00000000 hi2c1
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2399   .bss.accel_corr:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2406   .bss.accel_corr_p:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2413   .bss.accel_data:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2420   .bss.accel_data_p:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2427   .bss.buf:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2438   .bss.flag:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2440   .bss.gyro_corr:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2447   .bss.gyro_corr_p:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2454   .bss.gyro_data:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2461   .bss.gyro_data_p:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2468   .bss.hdma_usart2_tx:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2474   .bss.hi2c1:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2481   .bss.huart2:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2488   .bss.input:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2494   .bss.state:00000000 $d
C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s:2501   .rodata.FSM:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_I2C_Master_Transmit
HAL_Delay
HAL_I2C_Mem_Read
HAL_I2C_Mem_Write
__aeabi_f2d
sprintf
HAL_UART_Init
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccvJohSQ.s 			page 72


HAL_I2C_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
