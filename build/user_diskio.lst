ARM GAS  C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"user_diskio.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USER_initialize,"ax",%progbits
  20              		.align	1
  21              		.global	USER_initialize
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	USER_initialize:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "FATFS/Target/user_diskio.c"
   1:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN Header */
   2:FATFS/Target/user_diskio.c **** /**
   3:FATFS/Target/user_diskio.c ****  ******************************************************************************
   4:FATFS/Target/user_diskio.c ****   * @file    user_diskio.c
   5:FATFS/Target/user_diskio.c ****   * @brief   This file includes a diskio driver skeleton to be completed by the user.
   6:FATFS/Target/user_diskio.c ****   ******************************************************************************
   7:FATFS/Target/user_diskio.c ****   * @attention
   8:FATFS/Target/user_diskio.c ****   *
   9:FATFS/Target/user_diskio.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:FATFS/Target/user_diskio.c ****   * All rights reserved.</center></h2>
  11:FATFS/Target/user_diskio.c ****   *
  12:FATFS/Target/user_diskio.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:FATFS/Target/user_diskio.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:FATFS/Target/user_diskio.c ****   * the License. You may obtain a copy of the License at:
  15:FATFS/Target/user_diskio.c ****   *                             www.st.com/SLA0044
  16:FATFS/Target/user_diskio.c ****   *
  17:FATFS/Target/user_diskio.c ****   ******************************************************************************
  18:FATFS/Target/user_diskio.c ****   */
  19:FATFS/Target/user_diskio.c ****  /* USER CODE END Header */
  20:FATFS/Target/user_diskio.c **** 
  21:FATFS/Target/user_diskio.c **** #ifdef USE_OBSOLETE_USER_CODE_SECTION_0
  22:FATFS/Target/user_diskio.c **** /*
  23:FATFS/Target/user_diskio.c ****  * Warning: the user section 0 is no more in use (starting from CubeMx version 4.16.0)
  24:FATFS/Target/user_diskio.c ****  * To be suppressed in the future.
  25:FATFS/Target/user_diskio.c ****  * Kept to ensure backward compatibility with previous CubeMx versions when
  26:FATFS/Target/user_diskio.c ****  * migrating projects.
  27:FATFS/Target/user_diskio.c ****  * User code previously added there should be copied in the new user sections before
  28:FATFS/Target/user_diskio.c ****  * the section contents can be deleted.
  29:FATFS/Target/user_diskio.c ****  */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s 			page 2


  30:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN 0 */
  31:FATFS/Target/user_diskio.c **** /* USER CODE END 0 */
  32:FATFS/Target/user_diskio.c **** #endif
  33:FATFS/Target/user_diskio.c **** 
  34:FATFS/Target/user_diskio.c **** /* USER CODE BEGIN DECL */
  35:FATFS/Target/user_diskio.c **** 
  36:FATFS/Target/user_diskio.c **** /* Includes ------------------------------------------------------------------*/
  37:FATFS/Target/user_diskio.c **** #include <string.h>
  38:FATFS/Target/user_diskio.c **** #include "ff_gen_drv.h"
  39:FATFS/Target/user_diskio.c **** #include "fatfs_sd.h"
  40:FATFS/Target/user_diskio.c **** 
  41:FATFS/Target/user_diskio.c **** /* Private typedef -----------------------------------------------------------*/
  42:FATFS/Target/user_diskio.c **** /* Private define ------------------------------------------------------------*/
  43:FATFS/Target/user_diskio.c **** 
  44:FATFS/Target/user_diskio.c **** /* Private variables ---------------------------------------------------------*/
  45:FATFS/Target/user_diskio.c **** /* Disk status */
  46:FATFS/Target/user_diskio.c **** static volatile DSTATUS Stat = STA_NOINIT;
  47:FATFS/Target/user_diskio.c **** 
  48:FATFS/Target/user_diskio.c **** /* USER CODE END DECL */
  49:FATFS/Target/user_diskio.c **** 
  50:FATFS/Target/user_diskio.c **** /* Private function prototypes -----------------------------------------------*/
  51:FATFS/Target/user_diskio.c **** DSTATUS USER_initialize (BYTE pdrv);
  52:FATFS/Target/user_diskio.c **** DSTATUS USER_status (BYTE pdrv);
  53:FATFS/Target/user_diskio.c **** DRESULT USER_read (BYTE pdrv, BYTE *buff, DWORD sector, UINT count);
  54:FATFS/Target/user_diskio.c **** #if _USE_WRITE == 1
  55:FATFS/Target/user_diskio.c ****   DRESULT USER_write (BYTE pdrv, const BYTE *buff, DWORD sector, UINT count);
  56:FATFS/Target/user_diskio.c **** #endif /* _USE_WRITE == 1 */
  57:FATFS/Target/user_diskio.c **** #if _USE_IOCTL == 1
  58:FATFS/Target/user_diskio.c ****   DRESULT USER_ioctl (BYTE pdrv, BYTE cmd, void *buff);
  59:FATFS/Target/user_diskio.c **** #endif /* _USE_IOCTL == 1 */
  60:FATFS/Target/user_diskio.c **** 
  61:FATFS/Target/user_diskio.c **** Diskio_drvTypeDef  USER_Driver =
  62:FATFS/Target/user_diskio.c **** {
  63:FATFS/Target/user_diskio.c ****   USER_initialize,
  64:FATFS/Target/user_diskio.c ****   USER_status,
  65:FATFS/Target/user_diskio.c ****   USER_read,
  66:FATFS/Target/user_diskio.c **** #if  _USE_WRITE
  67:FATFS/Target/user_diskio.c ****   USER_write,
  68:FATFS/Target/user_diskio.c **** #endif  /* _USE_WRITE == 1 */
  69:FATFS/Target/user_diskio.c **** #if  _USE_IOCTL == 1
  70:FATFS/Target/user_diskio.c ****   USER_ioctl,
  71:FATFS/Target/user_diskio.c **** #endif /* _USE_IOCTL == 1 */
  72:FATFS/Target/user_diskio.c **** };
  73:FATFS/Target/user_diskio.c **** 
  74:FATFS/Target/user_diskio.c **** /* Private functions ---------------------------------------------------------*/
  75:FATFS/Target/user_diskio.c **** 
  76:FATFS/Target/user_diskio.c **** /**
  77:FATFS/Target/user_diskio.c ****   * @brief  Initializes a Drive
  78:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
  79:FATFS/Target/user_diskio.c ****   * @retval DSTATUS: Operation status
  80:FATFS/Target/user_diskio.c ****   */
  81:FATFS/Target/user_diskio.c **** DSTATUS USER_initialize (
  82:FATFS/Target/user_diskio.c **** 	BYTE pdrv           /* Physical drive nmuber to identify the drive */
  83:FATFS/Target/user_diskio.c **** )
  84:FATFS/Target/user_diskio.c **** {
  30              		.loc 1 84 1 view -0
  31              		.cfi_startproc
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s 			page 3


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 84 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  85:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN INIT */
  86:FATFS/Target/user_diskio.c ****     return SD_disk_initialize (pdrv);
  40              		.loc 1 86 5 is_stmt 1 view .LVU2
  41              		.loc 1 86 12 is_stmt 0 view .LVU3
  42 0002 FFF7FEFF 		bl	SD_disk_initialize
  43              	.LVL1:
  87:FATFS/Target/user_diskio.c ****   /* USER CODE END INIT */
  88:FATFS/Target/user_diskio.c **** }
  44              		.loc 1 88 1 view .LVU4
  45 0006 08BD     		pop	{r3, pc}
  46              		.cfi_endproc
  47              	.LFE130:
  49              		.section	.text.USER_status,"ax",%progbits
  50              		.align	1
  51              		.global	USER_status
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  56              	USER_status:
  57              	.LVL2:
  58              	.LFB131:
  89:FATFS/Target/user_diskio.c **** 
  90:FATFS/Target/user_diskio.c **** /**
  91:FATFS/Target/user_diskio.c ****   * @brief  Gets Disk Status
  92:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
  93:FATFS/Target/user_diskio.c ****   * @retval DSTATUS: Operation status
  94:FATFS/Target/user_diskio.c ****   */
  95:FATFS/Target/user_diskio.c **** DSTATUS USER_status (
  96:FATFS/Target/user_diskio.c **** 	BYTE pdrv       /* Physical drive number to identify the drive */
  97:FATFS/Target/user_diskio.c **** )
  98:FATFS/Target/user_diskio.c **** {
  59              		.loc 1 98 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		.loc 1 98 1 is_stmt 0 view .LVU6
  64 0000 08B5     		push	{r3, lr}
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 3, -8
  68              		.cfi_offset 14, -4
  99:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN STATUS */
 100:FATFS/Target/user_diskio.c ****     return SD_disk_status (pdrv);
  69              		.loc 1 100 5 is_stmt 1 view .LVU7
  70              		.loc 1 100 12 is_stmt 0 view .LVU8
  71 0002 FFF7FEFF 		bl	SD_disk_status
  72              	.LVL3:
 101:FATFS/Target/user_diskio.c ****   /* USER CODE END STATUS */
 102:FATFS/Target/user_diskio.c **** }
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s 			page 4


  73              		.loc 1 102 1 view .LVU9
  74 0006 08BD     		pop	{r3, pc}
  75              		.cfi_endproc
  76              	.LFE131:
  78              		.section	.text.USER_read,"ax",%progbits
  79              		.align	1
  80              		.global	USER_read
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	USER_read:
  86              	.LVL4:
  87              	.LFB132:
 103:FATFS/Target/user_diskio.c **** 
 104:FATFS/Target/user_diskio.c **** /**
 105:FATFS/Target/user_diskio.c ****   * @brief  Reads Sector(s)
 106:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 107:FATFS/Target/user_diskio.c ****   * @param  *buff: Data buffer to store read data
 108:FATFS/Target/user_diskio.c ****   * @param  sector: Sector address (LBA)
 109:FATFS/Target/user_diskio.c ****   * @param  count: Number of sectors to read (1..128)
 110:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 111:FATFS/Target/user_diskio.c ****   */
 112:FATFS/Target/user_diskio.c **** DRESULT USER_read (
 113:FATFS/Target/user_diskio.c **** 	BYTE pdrv,      /* Physical drive nmuber to identify the drive */
 114:FATFS/Target/user_diskio.c **** 	BYTE *buff,     /* Data buffer to store read data */
 115:FATFS/Target/user_diskio.c **** 	DWORD sector,   /* Sector address in LBA */
 116:FATFS/Target/user_diskio.c **** 	UINT count      /* Number of sectors to read */
 117:FATFS/Target/user_diskio.c **** )
 118:FATFS/Target/user_diskio.c **** {
  88              		.loc 1 118 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		.loc 1 118 1 is_stmt 0 view .LVU11
  93 0000 08B5     		push	{r3, lr}
  94              	.LCFI2:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 3, -8
  97              		.cfi_offset 14, -4
 119:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN READ */
 120:FATFS/Target/user_diskio.c ****     return SD_disk_read (pdrv, buff, sector, count);
  98              		.loc 1 120 5 is_stmt 1 view .LVU12
  99              		.loc 1 120 12 is_stmt 0 view .LVU13
 100 0002 FFF7FEFF 		bl	SD_disk_read
 101              	.LVL5:
 121:FATFS/Target/user_diskio.c ****   /* USER CODE END READ */
 122:FATFS/Target/user_diskio.c **** }
 102              		.loc 1 122 1 view .LVU14
 103 0006 08BD     		pop	{r3, pc}
 104              		.cfi_endproc
 105              	.LFE132:
 107              		.section	.text.USER_write,"ax",%progbits
 108              		.align	1
 109              		.global	USER_write
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s 			page 5


 114              	USER_write:
 115              	.LVL6:
 116              	.LFB133:
 123:FATFS/Target/user_diskio.c **** 
 124:FATFS/Target/user_diskio.c **** /**
 125:FATFS/Target/user_diskio.c ****   * @brief  Writes Sector(s)
 126:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
 127:FATFS/Target/user_diskio.c ****   * @param  *buff: Data to be written
 128:FATFS/Target/user_diskio.c ****   * @param  sector: Sector address (LBA)
 129:FATFS/Target/user_diskio.c ****   * @param  count: Number of sectors to write (1..128)
 130:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 131:FATFS/Target/user_diskio.c ****   */
 132:FATFS/Target/user_diskio.c **** #if _USE_WRITE == 1
 133:FATFS/Target/user_diskio.c **** DRESULT USER_write (
 134:FATFS/Target/user_diskio.c **** 	BYTE pdrv,          /* Physical drive nmuber to identify the drive */
 135:FATFS/Target/user_diskio.c **** 	const BYTE *buff,   /* Data to be written */
 136:FATFS/Target/user_diskio.c **** 	DWORD sector,       /* Sector address in LBA */
 137:FATFS/Target/user_diskio.c **** 	UINT count          /* Number of sectors to write */
 138:FATFS/Target/user_diskio.c **** )
 139:FATFS/Target/user_diskio.c **** {
 117              		.loc 1 139 1 is_stmt 1 view -0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		.loc 1 139 1 is_stmt 0 view .LVU16
 122 0000 08B5     		push	{r3, lr}
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 3, -8
 126              		.cfi_offset 14, -4
 140:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN WRITE */
 141:FATFS/Target/user_diskio.c ****   /* USER CODE HERE */
 142:FATFS/Target/user_diskio.c ****     return SD_disk_write (pdrv, buff, sector, count);
 127              		.loc 1 142 5 is_stmt 1 view .LVU17
 128              		.loc 1 142 12 is_stmt 0 view .LVU18
 129 0002 FFF7FEFF 		bl	SD_disk_write
 130              	.LVL7:
 143:FATFS/Target/user_diskio.c ****   /* USER CODE END WRITE */
 144:FATFS/Target/user_diskio.c **** }
 131              		.loc 1 144 1 view .LVU19
 132 0006 08BD     		pop	{r3, pc}
 133              		.cfi_endproc
 134              	.LFE133:
 136              		.section	.text.USER_ioctl,"ax",%progbits
 137              		.align	1
 138              		.global	USER_ioctl
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	USER_ioctl:
 144              	.LVL8:
 145              	.LFB134:
 145:FATFS/Target/user_diskio.c **** #endif /* _USE_WRITE == 1 */
 146:FATFS/Target/user_diskio.c **** 
 147:FATFS/Target/user_diskio.c **** /**
 148:FATFS/Target/user_diskio.c ****   * @brief  I/O control operation
 149:FATFS/Target/user_diskio.c ****   * @param  pdrv: Physical drive number (0..)
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s 			page 6


 150:FATFS/Target/user_diskio.c ****   * @param  cmd: Control code
 151:FATFS/Target/user_diskio.c ****   * @param  *buff: Buffer to send/receive control data
 152:FATFS/Target/user_diskio.c ****   * @retval DRESULT: Operation result
 153:FATFS/Target/user_diskio.c ****   */
 154:FATFS/Target/user_diskio.c **** #if _USE_IOCTL == 1
 155:FATFS/Target/user_diskio.c **** DRESULT USER_ioctl (
 156:FATFS/Target/user_diskio.c **** 	BYTE pdrv,      /* Physical drive nmuber (0..) */
 157:FATFS/Target/user_diskio.c **** 	BYTE cmd,       /* Control code */
 158:FATFS/Target/user_diskio.c **** 	void *buff      /* Buffer to send/receive control data */
 159:FATFS/Target/user_diskio.c **** )
 160:FATFS/Target/user_diskio.c **** {
 146              		.loc 1 160 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		.loc 1 160 1 is_stmt 0 view .LVU21
 151 0000 08B5     		push	{r3, lr}
 152              	.LCFI4:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 3, -8
 155              		.cfi_offset 14, -4
 161:FATFS/Target/user_diskio.c ****   /* USER CODE BEGIN IOCTL */
 162:FATFS/Target/user_diskio.c ****     return SD_disk_ioctl (pdrv, cmd, buff);
 156              		.loc 1 162 5 is_stmt 1 view .LVU22
 157              		.loc 1 162 12 is_stmt 0 view .LVU23
 158 0002 FFF7FEFF 		bl	SD_disk_ioctl
 159              	.LVL9:
 163:FATFS/Target/user_diskio.c ****   /* USER CODE END IOCTL */
 164:FATFS/Target/user_diskio.c **** }
 160              		.loc 1 164 1 view .LVU24
 161 0006 08BD     		pop	{r3, pc}
 162              		.cfi_endproc
 163              	.LFE134:
 165              		.global	USER_Driver
 166              		.section	.data.Stat,"aw"
 169              	Stat:
 170 0000 01       		.byte	1
 171              		.section	.data.USER_Driver,"aw"
 172              		.align	2
 175              	USER_Driver:
 176 0000 00000000 		.word	USER_initialize
 177 0004 00000000 		.word	USER_status
 178 0008 00000000 		.word	USER_read
 179 000c 00000000 		.word	USER_write
 180 0010 00000000 		.word	USER_ioctl
 181              		.text
 182              	.Letext0:
 183              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 184              		.file 3 "Middlewares/Third_Party/FatFs/src/diskio.h"
 185              		.file 4 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 186              		.file 5 "Device-Drivers/Inc/fatfs_sd.h"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 user_diskio.c
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:20     .text.USER_initialize:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:26     .text.USER_initialize:00000000 USER_initialize
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:50     .text.USER_status:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:56     .text.USER_status:00000000 USER_status
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:79     .text.USER_read:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:85     .text.USER_read:00000000 USER_read
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:108    .text.USER_write:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:114    .text.USER_write:00000000 USER_write
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:137    .text.USER_ioctl:00000000 $t
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:143    .text.USER_ioctl:00000000 USER_ioctl
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:175    .data.USER_Driver:00000000 USER_Driver
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:169    .data.Stat:00000000 Stat
C:\Users\samue\AppData\Local\Temp\ccRfPJE0.s:172    .data.USER_Driver:00000000 $d

UNDEFINED SYMBOLS
SD_disk_initialize
SD_disk_status
SD_disk_read
SD_disk_write
SD_disk_ioctl
